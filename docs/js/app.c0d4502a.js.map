{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?926f","webpack:///./src/lib/az/Morph.js","webpack:///./src/App.vue?f4da","webpack:///./src/App.vue","webpack:///./src/views/Home.vue?330a","webpack:///./src/lib/az/Dawg.js","webpack:///./src/lib/az/Tokens.js","webpack:///./src/lib/az/Syntax.js","webpack:///./src/lib/az/Az.js","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?2b8c","webpack:///./src/views/Home.vue","webpack:///./src/router.ts","webpack:///./src/store.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","Morph","Az","words","probabilities","suffixes","grammemes","paradigms","tags","UNKN","predictionSuffixes","Array","prefixes","defaults","ignoreCase","replacements","е","stutter","Infinity","typos","parsers","forceParse","normalizeScore","initials","particles","knownPrefixes","autoTypos","__init","initialized","deepFreeze","obj","propNames","getOwnPropertyNames","forEach","prop","C_Portable_Files_Git_squanchy_node_modules_babel_runtime_corejs2_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_6__","freeze","Tag","str","par","pair","split","this","stat","flex","grams","gram","parent","POS","POST","makeTag","tagInt","tagExt","tag","ext","toString","join","trim","matches","k","indexOf","Parse","isProductive","NUMR","NPRO","PRED","PREP","CONJ","PRCL","INTJ","Apro","NUMB","ROMN","LATN","PNCT","isCapitalized","Name","Surn","Patr","Geox","Init","word","config","Error","extend","parses","matched","terminal","Parsers","vars","parser","stutterCnt","typosCnt","concat","console","warn","toLocaleLowerCase","total","res","findAll","score","getDictionaryScore","sort","e1","e2","lookup","dawg","entries","Math","pow","min","normalize","keepPOS","inflect","pluralize","number","NOUN","ADJF","PRTF","nomn","accs","femn","CAse","log","group","groupEnd","DictionaryParse","paradigmIdx","formIdx","prefix","suffix","paradigm","formCnt","constructor","base","_base","substring","norm","groupCollapsed","form","pref","substr","CombinedParse","left","right","Dictionary","toLocaleUpperCase","opts","w","abbrTags","Abbr","caps","InitialsParser","isPatronymic","initialsTags","AbbrName","AbbrPatronymic","RegexpParser","regexp","match","IntNumber","RealNumber","Punctuation","RomanNumber","Latin","HyphenParticle","ADVB","HyphenAdverb","used","parse","HyphenWords","parts","end","PrefixKnown","PrefixUnknown","len","SuffixKnown","minlen","coeffs","max","stats","setDefaults","init","path","callback","tagsInt","tagsExt","loading","loaded","__dirname","DAWG","load","err","json","internal","external","externalFull","list","Uint16Array","count","pos","size","subarray","Appvue_type_template_id_6507e1b6_render","_vm","_h","$createElement","_c","_self","attrs","id","staticRenderFns","script","component","componentNormalizer","App","Homevue_type_template_id_0c26b248_render","staticClass","ref","_v","Homevue_type_template_id_0c26b248_staticRenderFns","ROOT","MISSING","PRECISION_MASK","HAS_LEAF_BIT","EXTENSION_BIT","IS_LEAF_BIT","CP1251","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","1027","8225","1046","8222","1047","1168","1048","1113","1049","1045","1050","1028","160","1040","1051","164","166","167","169","171","172","173","174","1053","176","177","1114","181","182","183","8221","187","1029","1056","1057","1058","8364","1112","1115","1059","1060","1030","1061","1062","1063","1116","1064","1065","1031","1066","1067","1068","1069","1070","1032","8226","1071","1072","8482","1073","8240","1118","1074","1110","8230","1075","1033","1076","1077","8211","1078","1119","1079","1042","1080","1034","1025","1081","1082","8212","1083","1169","1084","1052","1085","1035","1086","1087","1088","1089","1090","1036","1041","1091","1092","8224","1093","8470","1094","1054","1095","1096","8249","1097","1098","1044","1099","1111","1055","1100","1038","8220","1101","8250","1102","8216","1103","1043","1105","1039","1026","1106","8218","1107","8217","1108","1109","UCS2","String","fromCharCode","COMMON_TYPOS","й","ц","у","к","н","г","ш","щ","з","х","ъ","ф","ы","в","а","п","р","о","л","д","ж","э","ё","я","ч","с","м","и","т","ь","б","ю","-","=","\\",".","offset","label","hasLeaf","units","guide","format","fromArrayBuffer","dv","DataView","unitsLength","getUint32","guideLength","Uint32Array","Uint8Array","url","followByte","index","nextIndex","followString","code","charCodeAt","hasValue","valueIndex","find","iterateAll","results","stack","last","pop","replaces","mstutter","mtypos","cur","possible","Tokens","TLDs","html","wiki","markdown","hashtags","mentions","emails","links","protocols","www","tlds","HTML_ENTITIES","nbsp","quot","gt","lt","amp","ndash","Token","source","st","firstUpper","allUpper","type","subType","_str","toLowerCase","en","text","tokens","append","alwaysTrue","getMatcher","filter","exclude","exclusive","types","token","array","sub","WORD","NUMBER","OTHER","DIGIT","CYRIL","LATIN","MIXED","PUNCT","SPACE","MARKUP","NEWLINE","EMAIL","LINK","HASHTAG","MENTION","TAG","CONTENT","SCRIPT","STYLE","COMMENT","CLOSING","TEMPLATE","RANGE","ENTITY","offs","ts","ch","parseInt","charType","charUpper","tokenType","tokenSubType","lineStart","quote","found","done","matcher","idx","nextToken","moveIndex","punctAhead","prevToken","punctBehind","hasTokensAhead","hasTokensBehind","Syntax","responseType","fs","keys","readFile","encoding","JSON","buffer","ab","ArrayBuffer","view","xhr","XMLHttpRequest","open","onload","e","response","send","arguments","Homevue_type_script_lang_js_","mounted","_mounted","asyncToGenerator","regeneratorRuntime","mark","_callee","_this","wrap","_context","prev","next","az_Az","capitalize","charAt","toUpperCase","processNode","from","childNodes","node","nodeType","Node","TEXT_NODE","verbs","map","tokenText","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","dict","VERB","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","verb","nodeValue","$refs","stop","views_Homevue_type_script_lang_js_","Home_component","Home","vue_runtime_esm","use","vue_router_esm","router","routes","vuex_esm","store","Store","state","mutations","actions","productionTip","render","h","$mount"],"mappings":"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S,MAAO,OAAQ,OAAQ,KAAM,QACjEC,EAAgB,CACd,OACA,OACA,OACA,OACA,QACA,UACA,OACA,MACA,OACA,QACA,QACA,OACA,MACA,MACA,MACA,OACA,SACA,MACA,SACA,QACA,QACA,SACA,UACA,QACA,QACA,MACA,SACA,OACA,QACA,QACA,OACA,OACA,MACA,OACA,KACA,MACA,OACA,OACA,MACA,KACA,OACA,KACA,MACA,QACA,QACA,QACA,SACA,OACA,OACA,QACA,SACA,QACA,SACA,SACA,QACA,MACA,OACA,QACA,QACA,SACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,SACA,OACA,QACA,KACA,QACA,OACA,QACA,MACA,QACA,QACA,OACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,QACA,MACA,OACA,OACA,SACA,UACA,WACA,QACA,SACA,UACA,QACA,QACA,KACA,QACA,SACA,OACA,QACA,QACA,SACA,OACA,MACA,QACA,SACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,QACA,OACA,MACA,OACA,UACA,MACA,OACA,SACA,UACA,UACA,SACA,QAEFC,EAAY,CAAC,EAAG,GAEhBC,EAAS,GACTC,GAAc,EAGhB,SAASC,EAAWC,GAClB,GAAM,WAAYlF,OAAlB,CAIA,IAAImF,EAAYnF,OAAOoF,oBAAoBF,GAO3C,OANAC,EAAUE,QAAQ,SAAS3D,GACzB,IAAI4D,EAAOJ,EAAIxD,GAEI,UAAf1B,OAAAuF,EAAA,KAAAvF,CAAOsF,IAA6B,OAATA,GAAeL,EAAWK,KAGpDtF,OAAOwF,OAAON,IAkBvB,IAAIO,EAAM,SAASC,GACjB,IAAIC,EACFC,EAAOF,EAAIG,MAAM,KACnBC,KAAKC,KAAOH,EAAK,GAAGC,MAAM,KAC1BC,KAAKE,KAAOJ,EAAK,GAAKA,EAAK,GAAGC,MAAM,KAAO,GAC3C,IAAK,IAAIhF,EAAI,EAAGA,EAAI,EAAGA,I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GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,IAAK,IACLC,KAAM,IACNC,KAAM,IACNC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,IAAK,IACLC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IA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","file":"js/app.c0d4502a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","export function Morph(Az) {\r\n  var words,\r\n    probabilities,\r\n    predictionSuffixes = new Array(3),\r\n    prefixes = [\"\", \"по\", \"наи\"],\r\n    suffixes,\r\n    grammemes,\r\n    paradigms,\r\n    tags,\r\n    defaults = {\r\n      ignoreCase: false,\r\n      replacements: { е: \"ё\" },\r\n      stutter: Infinity,\r\n      typos: 0,\r\n      parsers: [\r\n        // Словарные слова + инициалы\r\n        \"Dictionary?\",\r\n        \"AbbrName?\",\r\n        \"AbbrPatronymic\",\r\n        // Числа, пунктуация, латиница (по-хорошему, токенизатор не должен эту ерунду сюда пускать)\r\n        \"IntNumber\",\r\n        \"RealNumber\",\r\n        \"Punctuation\",\r\n        \"RomanNumber?\",\r\n        \"Latin\",\r\n        // Слова с дефисами\r\n        \"HyphenParticle\",\r\n        \"HyphenAdverb\",\r\n        \"HyphenWords\",\r\n        // Предсказатели по префиксам/суффиксам\r\n        \"PrefixKnown\",\r\n        \"PrefixUnknown?\",\r\n        \"SuffixKnown?\",\r\n        \"Abbr\",\r\n      ],\r\n      forceParse: false,\r\n      normalizeScore: true,\r\n    },\r\n    initials = \"АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЭЮЯ\",\r\n    particles = [\"-то\", \"-ка\", \"-таки\", \"-де\", \"-тко\", \"-тка\", \"-с\", \"-ста\"],\r\n    knownPrefixes = [\r\n      \"авиа\",\r\n      \"авто\",\r\n      \"аква\",\r\n      \"анти\",\r\n      \"анти-\",\r\n      \"антропо\",\r\n      \"архи\",\r\n      \"арт\",\r\n      \"арт-\",\r\n      \"астро\",\r\n      \"аудио\",\r\n      \"аэро\",\r\n      \"без\",\r\n      \"бес\",\r\n      \"био\",\r\n      \"вело\",\r\n      \"взаимо\",\r\n      \"вне\",\r\n      \"внутри\",\r\n      \"видео\",\r\n      \"вице-\",\r\n      \"вперед\",\r\n      \"впереди\",\r\n      \"гекто\",\r\n      \"гелио\",\r\n      \"гео\",\r\n      \"гетеро\",\r\n      \"гига\",\r\n      \"гигро\",\r\n      \"гипер\",\r\n      \"гипо\",\r\n      \"гомо\",\r\n      \"дву\",\r\n      \"двух\",\r\n      \"де\",\r\n      \"дез\",\r\n      \"дека\",\r\n      \"деци\",\r\n      \"дис\",\r\n      \"до\",\r\n      \"евро\",\r\n      \"за\",\r\n      \"зоо\",\r\n      \"интер\",\r\n      \"инфра\",\r\n      \"квази\",\r\n      \"квази-\",\r\n      \"кило\",\r\n      \"кино\",\r\n      \"контр\",\r\n      \"контр-\",\r\n      \"космо\",\r\n      \"космо-\",\r\n      \"крипто\",\r\n      \"лейб-\",\r\n      \"лже\",\r\n      \"лже-\",\r\n      \"макро\",\r\n      \"макси\",\r\n      \"макси-\",\r\n      \"мало\",\r\n      \"меж\",\r\n      \"медиа\",\r\n      \"медиа-\",\r\n      \"мега\",\r\n      \"мета\",\r\n      \"мета-\",\r\n      \"метео\",\r\n      \"метро\",\r\n      \"микро\",\r\n      \"милли\",\r\n      \"мини\",\r\n      \"мини-\",\r\n      \"моно\",\r\n      \"мото\",\r\n      \"много\",\r\n      \"мульти\",\r\n      \"нано\",\r\n      \"нарко\",\r\n      \"не\",\r\n      \"небез\",\r\n      \"недо\",\r\n      \"нейро\",\r\n      \"нео\",\r\n      \"низко\",\r\n      \"обер-\",\r\n      \"обще\",\r\n      \"одно\",\r\n      \"около\",\r\n      \"орто\",\r\n      \"палео\",\r\n      \"пан\",\r\n      \"пара\",\r\n      \"пента\",\r\n      \"пере\",\r\n      \"пиро\",\r\n      \"поли\",\r\n      \"полу\",\r\n      \"после\",\r\n      \"пост\",\r\n      \"пост-\",\r\n      \"порно\",\r\n      \"пра\",\r\n      \"пра-\",\r\n      \"пред\",\r\n      \"пресс-\",\r\n      \"противо\",\r\n      \"противо-\",\r\n      \"прото\",\r\n      \"псевдо\",\r\n      \"псевдо-\",\r\n      \"радио\",\r\n      \"разно\",\r\n      \"ре\",\r\n      \"ретро\",\r\n      \"ретро-\",\r\n      \"само\",\r\n      \"санти\",\r\n      \"сверх\",\r\n      \"сверх-\",\r\n      \"спец\",\r\n      \"суб\",\r\n      \"супер\",\r\n      \"супер-\",\r\n      \"супра\",\r\n      \"теле\",\r\n      \"тетра\",\r\n      \"топ-\",\r\n      \"транс\",\r\n      \"транс-\",\r\n      \"ультра\",\r\n      \"унтер-\",\r\n      \"штаб-\",\r\n      \"экзо\",\r\n      \"эко\",\r\n      \"эндо\",\r\n      \"эконом-\",\r\n      \"экс\",\r\n      \"экс-\",\r\n      \"экстра\",\r\n      \"экстра-\",\r\n      \"электро\",\r\n      \"энерго\",\r\n      \"этно\",\r\n    ],\r\n    autoTypos = [4, 9],\r\n    UNKN,\r\n    __init = [],\r\n    initialized = false;\r\n\r\n  // Взято из https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\r\n  function deepFreeze(obj) {\r\n    if (!(\"freeze\" in Object)) {\r\n      return;\r\n    }\r\n\r\n    var propNames = Object.getOwnPropertyNames(obj);\r\n    propNames.forEach(function(name) {\r\n      var prop = obj[name];\r\n\r\n      if (typeof prop == \"object\" && prop !== null) deepFreeze(prop);\r\n    });\r\n\r\n    return Object.freeze(obj);\r\n  }\r\n\r\n  /**\r\n   * Тег. Содержит в себе информацию о конкретной форме слова, но при этом\r\n   * к конкретному слову не привязан. Всевозможные значения тегов переиспользуются\r\n   * для всех разборов слов.\r\n   *\r\n   * Все граммемы навешаны на тег как поля. Если какая-то граммема содержит в себе\r\n   * дочерние граммемы, то значением поля является именно название дочерней\r\n   * граммемы (например, tag.GNdr == 'masc'). В то же время для дочерних граммем\r\n   * значением является просто true (т.е. условие можно писать и просто как\r\n   * if (tag.masc) ...).\r\n   *\r\n   * @property {string[]} stat Полный список неизменяемых граммем.\r\n   * @property {string[]} flex Полный список изменяемых граммем.\r\n   * @property {Tag} ext Копия тега с русскими обозначениями (по версии OpenCorpora).\r\n   */\r\n  var Tag = function(str) {\r\n    var par,\r\n      pair = str.split(\" \");\r\n    this.stat = pair[0].split(\",\");\r\n    this.flex = pair[1] ? pair[1].split(\",\") : [];\r\n    for (var j = 0; j < 2; j++) {\r\n      var grams = this[[\"stat\", \"flex\"][j]];\r\n      for (var i = 0; i < grams.length; i++) {\r\n        var gram = grams[i];\r\n        this[gram] = true;\r\n        // loc2 -> loct -> CAse\r\n        while (grammemes[gram] && (par = grammemes[gram].parent)) {\r\n          this[par] = gram;\r\n          gram = par;\r\n        }\r\n      }\r\n    }\r\n    if (\"POST\" in this) {\r\n      this.POS = this.POST;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Возвращает текстовое представление тега.\r\n   *\r\n   * @returns {string} Список неизменяемых граммем через запятую, пробел,\r\n   *  и список изменяемых граммем через запятую.\r\n   */\r\n  Tag.prototype.toString = function() {\r\n    return (this.stat.join(\",\") + \" \" + this.flex.join(\",\")).trim();\r\n  };\r\n\r\n  /**\r\n   * Проверяет согласованность с конкретными значениями граммем либо со списком\r\n   * граммем из другого тега (или слова).\r\n   *\r\n   * @param {Tag|Parse} [tag] Тег или разбор слова, с которым следует\r\n   *  проверить согласованность.\r\n   * @param {Array|Object} grammemes Граммемы, по которым нужно проверить\r\n   *  согласованность.\r\n   *\r\n   *  Если указан тег (или разбор), то grammemes должен быть массивом тех\r\n   *  граммем, которые у обоих тегов должны совпадать. Например:\r\n   *  tag.matches(otherTag, ['POS', 'GNdr'])\r\n   *\r\n   *  Если тег не указан, а указан массив граммем, то проверяется просто их\r\n   *  наличие. Например, аналог выражения (tag.NOUN && tag.masc):\r\n   *  tag.matches([ 'NOUN', 'masc' ])\r\n   *\r\n   *  Если тег не указан, а указан объект, то ключи в нем — названия граммем,\r\n   *  значения — дочерние граммемы, массивы граммем, либо true/false:\r\n   *  tag.matches({ 'POS' : 'NOUN', 'GNdr': ['masc', 'neut'] })\r\n   * @returns {boolean} Является ли текущий тег согласованным с указанным.\r\n   */\r\n  // TODO: научиться понимать, что некоторые граммемы можно считать эквивалентными при сравнении двух тегов (вариации падежей и т.п.)\r\n  Tag.prototype.matches = function(tag, grammemes) {\r\n    if (!grammemes) {\r\n      if (Object.prototype.toString.call(tag) === \"[object Array]\") {\r\n        for (var i = 0; i < tag.length; i++) {\r\n          if (!this[tag[i]]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      // Match to map\r\n      else\r\n        for (var k in tag) {\r\n          if (Object.prototype.toString.call(tag[k]) === \"[object Array]\") {\r\n            if (!tag[k].indexOf(this[k])) {\r\n              return false;\r\n            }\r\n          } else {\r\n            if (tag[k] != this[k]) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      return true;\r\n    }\r\n\r\n    if (tag instanceof Parse) {\r\n      tag = tag.tag;\r\n    }\r\n\r\n    // Match to another tag\r\n    for (var i = 0; i < grammemes.length; i++) {\r\n      if (tag[grammemes[i]] != this[grammemes[i]]) {\r\n        // Special case: tag.CAse\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  Tag.prototype.isProductive = function() {\r\n    return !(\r\n      this.NUMR ||\r\n      this.NPRO ||\r\n      this.PRED ||\r\n      this.PREP ||\r\n      this.CONJ ||\r\n      this.PRCL ||\r\n      this.INTJ ||\r\n      this.Apro ||\r\n      this.NUMB ||\r\n      this.ROMN ||\r\n      this.LATN ||\r\n      this.PNCT ||\r\n      this.UNKN\r\n    );\r\n  };\r\n\r\n  Tag.prototype.isCapitalized = function() {\r\n    return this.Name || this.Surn || this.Patr || this.Geox || this.Init;\r\n  };\r\n\r\n  function makeTag(tagInt, tagExt) {\r\n    var tag = new Tag(tagInt);\r\n    tag.ext = new Tag(tagExt);\r\n    return deepFreeze(tag);\r\n  }\r\n\r\n  /**\r\n   * Производит морфологический анализ слова. Возвращает возможные варианты\r\n   * разбора по убыванию их правдоподобности.\r\n   *\r\n   * @playground\r\n   * var Az = require('az');\r\n   * Az.Morph.init(function() {\r\n   *   console.log(Az.Morph('стали'));\r\n   * });\r\n   * @param {string} word Слово, которое следует разобрать.\r\n   * @param {Object} [config] Опции разбора.\r\n   * @param {boolean} [config.ignoreCase=False] Следует ли игнорировать\r\n   *  регистр слов (в основном это означает возможность написания имен собственных и\r\n   *  инициалов с маленькой буквы).\r\n   * @param {Object} [config.replacements={ 'е': 'ё' }] Допустимые замены букв\r\n   *  при поиске слов в словаре. Ключи объекта — заменяемые буквы в разбираемом\r\n   *  слове, соответствующие им значения — буквы в словарных словах, которым\r\n   *  допустимо встречаться вместо заменяемых. По умолчанию буква «е» может\r\n   *  соответствовать букве «ё» в словарных словах.\r\n   * @param {number} [config.stutter=Infinity] «Заикание». Устраняет повторения букв\r\n   *  (как с дефисом - «не-е-ет», так и без - «нееет»).\r\n   *\r\n   *  Infinity не ограничивает максимальное число повторений (суммарно во всем слове).\r\n   *\r\n   *  0 или false чтобы отключить.\r\n   * @param {number|'auto'} [config.typos=0] Опечатки. Максимальное количество\r\n   * опечаток в слове.\r\n   *\r\n   *  Опечаткой считается:\r\n   *  - лишняя буква в слове\r\n   *  - пропущенная буква в слове (TODO: самый медленный тип опечаток, стоит сделать опциональным)\r\n   *  - не та буква в слове (если правильная буква стоит рядом на клавиатуре)\r\n   *  - переставленные местами соседние буквы\r\n   *\r\n   *  0 или false чтобы отключить.\r\n   *\r\n   *  'auto':\r\n   *  - 0, если слово короче 5 букв\r\n   *  - 1, если слово короче 10 букв (но только если не нашлось варианта разбора без опечаток)\r\n   *  - 2 в противном случае (но только если не нашлось варианта разбора без опечаток или с 1 опечаткой)\r\n   * @param {string[]} [config.parsers] Список применяемых парсеров (см. поля\r\n   *  объекта Az.Morph.Parsers) в порядке применения (т.е. стоящие в начале\r\n   *  имеют наивысший приоритет).\r\n   *\r\n   *  Вопросительный знак означает, что данный парсер не терминальный, то есть\r\n   *  варианты собираются до первого терминального парсера. Иными словами, если\r\n   *  мы дошли до какого-то парсера, значит все стоящие перед ним терминальные\r\n   *  парсеры либо не дали результата совсем, либо дали только с опечатками.\r\n   *\r\n   *  (парсер в терминологии pymorphy2 — анализатор)\r\n   * @param {boolean} [config.forceParse=False] Всегда возвращать хотя бы один вариант\r\n   *  разбора (как это делает pymorphy2), даже если совсем ничего не получилось.\r\n   * @returns {Parse[]} Варианты разбора.\r\n   * @memberof Az\r\n   */\r\n  var Morph = function(word, config) {\r\n    if (!initialized) {\r\n      throw new Error(\"Please call Az.Morph.init() before using this module.\");\r\n    }\r\n\r\n    config = config ? Az.extend(defaults, config) : defaults;\r\n\r\n    var parses = [];\r\n    var matched = false;\r\n    for (var i = 0; i < config.parsers.length; i++) {\r\n      var name = config.parsers[i];\r\n      var terminal = name[name.length - 1] != \"?\";\r\n      name = terminal ? name : name.slice(0, -1);\r\n      if (name in Morph.Parsers) {\r\n        var vars = Morph.Parsers[name](word, config);\r\n        for (var j = 0; j < vars.length; j++) {\r\n          vars[j].parser = name;\r\n          if (!vars[j].stutterCnt && !vars[j].typosCnt) {\r\n            matched = true;\r\n          }\r\n        }\r\n\r\n        parses = parses.concat(vars);\r\n        if (matched && terminal) {\r\n          break;\r\n        }\r\n      } else {\r\n        console.warn('Parser \"' + name + '\" is not found. Skipping');\r\n      }\r\n    }\r\n\r\n    if (!parses.length && config.forceParse) {\r\n      parses.push(new Parse(word.toLocaleLowerCase(), UNKN));\r\n    }\r\n\r\n    var total = 0;\r\n    for (var i = 0; i < parses.length; i++) {\r\n      if (parses[i].parser == \"Dictionary\") {\r\n        var res = probabilities.findAll(parses[i] + \":\" + parses[i].tag);\r\n        if (res && res[0]) {\r\n          parses[i].score =\r\n            (res[0][1] / 1000000) *\r\n            getDictionaryScore(parses[i].stutterCnt, parses[i].typosCnt);\r\n          total += parses[i].score;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Normalize Dictionary & non-Dictionary scores separately\r\n    if (config.normalizeScore) {\r\n      if (total > 0) {\r\n        for (var i = 0; i < parses.length; i++) {\r\n          if (parses[i].parser == \"Dictionary\") {\r\n            parses[i].score /= total;\r\n          }\r\n        }\r\n      }\r\n\r\n      total = 0;\r\n      for (var i = 0; i < parses.length; i++) {\r\n        if (parses[i].parser != \"Dictionary\") {\r\n          total += parses[i].score;\r\n        }\r\n      }\r\n      if (total > 0) {\r\n        for (var i = 0; i < parses.length; i++) {\r\n          if (parses[i].parser != \"Dictionary\") {\r\n            parses[i].score /= total;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    parses.sort(function(e1, e2) {\r\n      return e2.score - e1.score;\r\n    });\r\n\r\n    return parses;\r\n  };\r\n\r\n  // TODO: вынести парсеры в отдельный файл(ы)?\r\n\r\n  Morph.Parsers = {};\r\n\r\n  /**\r\n   * Один из возможных вариантов морфологического разбора.\r\n   *\r\n   * @property {string} word Слово в текущей форме (с исправленными ошибками,\r\n   *  если они были)\r\n   * @property {Tag} tag Тег, описывающий текущую форму слова.\r\n   * @property {number} score Число от 0 до 1, соответствующее «уверенности»\r\n   *  в данном разборе (чем оно выше, тем вероятнее данный вариант).\r\n   * @property {number} stutterCnt Число «заиканий», исправленных в слове.\r\n   * @property {number} typosCnt Число опечаток, исправленных в слове.\r\n   */\r\n  var Parse = function(word, tag, score, stutterCnt, typosCnt) {\r\n    this.word = word;\r\n    this.tag = tag;\r\n    this.stutterCnt = stutterCnt || 0;\r\n    this.typosCnt = typosCnt || 0;\r\n    this.score = score || 0;\r\n  };\r\n\r\n  /**\r\n   * Приводит слово к его начальной форме.\r\n   *\r\n   * @param {boolean} keepPOS Не менять часть речи при нормализации (например,\r\n   *  не делать из причастия инфинитив).\r\n   * @returns {Parse} Разбор, соответствующий начальной форме или False,\r\n   *  если произвести нормализацию не удалось.\r\n   */\r\n  // TODO: некоторые смены частей речи, возможно, стоит делать в любом случае (т.к., например, компаративы, краткие формы причастий и прилагательных разделены, инфинитив отделен от глагола)\r\n  Parse.prototype.normalize = function(keepPOS) {\r\n    return this.inflect(keepPOS ? { POS: this.tag.POS } : 0);\r\n  };\r\n\r\n  /**\r\n   * Приводит слово к указанной форме.\r\n   *\r\n   * @param {Tag|Parse} [tag] Тег или другой разбор слова, с которым следует\r\n   *  согласовать данный.\r\n   * @param {Array|Object} grammemes Граммемы, по которым нужно согласовать слово.\r\n   * @returns {Parse|False} Разбор, соответствующий указанной форме или False,\r\n   *  если произвести согласование не удалось.\r\n   * @see Tag.matches\r\n   */\r\n  Parse.prototype.inflect = function(tag, grammemes) {\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Приводит слово к форме, согласующейся с указанным числом.\r\n   * Вместо конкретного числа можно указать категорию (согласно http://www.unicode.org/cldr/charts/29/supplemental/language_plural_rules.html).\r\n   *\r\n   * @param {number|string} number Число, с которым нужно согласовать данное слово или категория, описывающая правило построения множественного числа.\r\n   * @returns {Parse|False} Разбор, соответствующий указанному числу или False,\r\n   *  если произвести согласование не удалось.\r\n   */\r\n  Parse.prototype.pluralize = function(number) {\r\n    if (!this.tag.NOUN && !this.tag.ADJF && !this.tag.PRTF) {\r\n      return this;\r\n    }\r\n\r\n    if (typeof number == \"number\") {\r\n      number = number % 100;\r\n      if (number % 10 == 0 || number % 10 > 4 || (number > 4 && number < 21)) {\r\n        number = \"many\";\r\n      } else if (number % 10 == 1) {\r\n        number = \"one\";\r\n      } else {\r\n        number = \"few\";\r\n      }\r\n    }\r\n\r\n    if (this.tag.NOUN && !this.tag.nomn && !this.tag.accs) {\r\n      return this.inflect([number == \"one\" ? \"sing\" : \"plur\", this.tag.CAse]);\r\n    } else if (number == \"one\") {\r\n      return this.inflect([\"sing\", this.tag.nomn ? \"nomn\" : \"accs\"]);\r\n    } else if (this.tag.NOUN && number == \"few\") {\r\n      return this.inflect([\"sing\", \"gent\"]);\r\n    } else if (\r\n      (this.tag.ADJF || this.tag.PRTF) &&\r\n      this.tag.femn &&\r\n      number == \"few\"\r\n    ) {\r\n      return this.inflect([\"plur\", \"nomn\"]);\r\n    } else {\r\n      return this.inflect([\"plur\", \"gent\"]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Проверяет, согласуется ли текущая форма слова с указанной.\r\n   *\r\n   * @param {Tag|Parse} [tag] Тег или другой разбор слова, с которым следует\r\n   *  проверить согласованность.\r\n   * @param {Array|Object} grammemes Граммемы, по которым нужно проверить\r\n   *  согласованность.\r\n   * @returns {boolean} Является ли текущая форма слова согласованной с указанной.\r\n   * @see Tag.matches\r\n   */\r\n  Parse.prototype.matches = function(tag, grammemes) {\r\n    return this.tag.matches(tag, grammemes);\r\n  };\r\n\r\n  /**\r\n   * Возвращает текущую форму слова.\r\n   *\r\n   * @returns {String} Текущая форма слова.\r\n   */\r\n  Parse.prototype.toString = function() {\r\n    return this.word;\r\n  };\r\n\r\n  // Выводит информацию о слове в консоль.\r\n  Parse.prototype.log = function() {\r\n    console.group(this.toString());\r\n    console.log(\"Stutter?\", this.stutterCnt, \"Typos?\", this.typosCnt);\r\n    console.log(this.tag.ext.toString());\r\n    console.groupEnd();\r\n  };\r\n\r\n  function lookup(dawg, word, config) {\r\n    var entries;\r\n    if (config.typos == \"auto\") {\r\n      entries = dawg.findAll(word, config.replacements, config.stutter, 0);\r\n      for (\r\n        var i = 0;\r\n        i < autoTypos.length && !entries.length && word.length > autoTypos[i];\r\n        i++\r\n      ) {\r\n        entries = dawg.findAll(\r\n          word,\r\n          config.replacements,\r\n          config.stutter,\r\n          i + 1,\r\n        );\r\n      }\r\n    } else {\r\n      entries = dawg.findAll(\r\n        word,\r\n        config.replacements,\r\n        config.stutter,\r\n        config.typos,\r\n      );\r\n    }\r\n    return entries;\r\n  }\r\n\r\n  function getDictionaryScore(stutterCnt, typosCnt) {\r\n    return Math.pow(0.3, typosCnt) * Math.pow(0.6, Math.min(stutterCnt, 1));\r\n  }\r\n\r\n  var DictionaryParse = function(\r\n    word,\r\n    paradigmIdx,\r\n    formIdx,\r\n    stutterCnt,\r\n    typosCnt,\r\n    prefix,\r\n    suffix,\r\n  ) {\r\n    this.word = word;\r\n    this.paradigmIdx = paradigmIdx;\r\n    this.paradigm = paradigms[paradigmIdx];\r\n    this.formIdx = formIdx;\r\n    this.formCnt = this.paradigm.length / 3;\r\n    this.tag = tags[this.paradigm[this.formCnt + formIdx]];\r\n    this.stutterCnt = stutterCnt || 0;\r\n    this.typosCnt = typosCnt || 0;\r\n    this.score = getDictionaryScore(this.stutterCnt, this.typosCnt);\r\n    this.prefix = prefix || \"\";\r\n    this.suffix = suffix || \"\";\r\n  };\r\n\r\n  DictionaryParse.prototype = Object.create(Parse.prototype);\r\n  DictionaryParse.prototype.constructor = DictionaryParse;\r\n\r\n  // Возвращает основу слова\r\n  DictionaryParse.prototype.base = function() {\r\n    if (this._base) {\r\n      return this._base;\r\n    }\r\n    return (this._base = this.word.substring(\r\n      prefixes[this.paradigm[(this.formCnt << 1) + this.formIdx]].length,\r\n      this.word.length - suffixes[this.paradigm[this.formIdx]].length,\r\n    ));\r\n  };\r\n\r\n  // Склоняет/спрягает слово так, чтобы оно соответствовало граммемам другого слова, тега или просто конкретным граммемам (подробнее см. Tag.prototype.matches).\r\n  // Всегда выбирается первый подходящий вариант.\r\n  DictionaryParse.prototype.inflect = function(tag, grammemes) {\r\n    if (!grammemes && typeof tag === \"number\") {\r\n      // Inflect to specific formIdx\r\n      return new DictionaryParse(\r\n        prefixes[this.paradigm[(this.formCnt << 1) + tag]] +\r\n          this.base() +\r\n          suffixes[this.paradigm[tag]],\r\n        this.paradigmIdx,\r\n        tag,\r\n        0,\r\n        0,\r\n        this.prefix,\r\n        this.suffix,\r\n      );\r\n    }\r\n\r\n    for (var formIdx = 0; formIdx < this.formCnt; formIdx++) {\r\n      if (tags[this.paradigm[this.formCnt + formIdx]].matches(tag, grammemes)) {\r\n        return new DictionaryParse(\r\n          prefixes[this.paradigm[(this.formCnt << 1) + formIdx]] +\r\n            this.base() +\r\n            suffixes[this.paradigm[formIdx]],\r\n          this.paradigmIdx,\r\n          formIdx,\r\n          0,\r\n          0,\r\n          this.prefix,\r\n          this.suffix,\r\n        );\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  DictionaryParse.prototype.log = function() {\r\n    console.group(this.toString());\r\n    console.log(\"Stutter?\", this.stutterCnt, \"Typos?\", this.typosCnt);\r\n    console.log(\r\n      prefixes[this.paradigm[(this.formCnt << 1) + this.formIdx]] +\r\n        \"|\" +\r\n        this.base() +\r\n        \"|\" +\r\n        suffixes[this.paradigm[this.formIdx]],\r\n    );\r\n    console.log(this.tag.ext.toString());\r\n    var norm = this.normalize();\r\n    console.log(\"=> \", norm + \" (\" + norm.tag.ext.toString() + \")\");\r\n    norm = this.normalize(true);\r\n    console.log(\"=> \", norm + \" (\" + norm.tag.ext.toString() + \")\");\r\n    console.groupCollapsed(\"Все формы: \" + this.formCnt);\r\n    for (var formIdx = 0; formIdx < this.formCnt; formIdx++) {\r\n      var form = this.inflect(formIdx);\r\n      console.log(form + \" (\" + form.tag.ext.toString() + \")\");\r\n    }\r\n    console.groupEnd();\r\n    console.groupEnd();\r\n  };\r\n\r\n  DictionaryParse.prototype.toString = function() {\r\n    if (this.prefix) {\r\n      var pref = prefixes[this.paradigm[(this.formCnt << 1) + this.formIdx]];\r\n      return pref + this.prefix + this.word.substr(pref.length) + this.suffix;\r\n    } else {\r\n      return this.word + this.suffix;\r\n    }\r\n  };\r\n\r\n  var CombinedParse = function(left, right) {\r\n    this.left = left;\r\n    this.right = right;\r\n    this.tag = right.tag;\r\n    this.score = left.score * right.score * 0.8;\r\n    this.stutterCnt = left.stutterCnt + right.stutterCnt;\r\n    this.typosCnt = left.typosCnt + right.typosCnt;\r\n    if (\"formCnt\" in right) {\r\n      this.formCnt = right.formCnt;\r\n    }\r\n  };\r\n\r\n  CombinedParse.prototype = Object.create(Parse.prototype);\r\n  CombinedParse.prototype.constructor = CombinedParse;\r\n\r\n  CombinedParse.prototype.inflect = function(tag, grammemes) {\r\n    var left, right;\r\n\r\n    var right = this.right.inflect(tag, grammemes);\r\n    if (!grammemes && typeof tag === \"number\") {\r\n      left = this.left.inflect(right.tag, [\r\n        \"POST\",\r\n        \"NMbr\",\r\n        \"CAse\",\r\n        \"PErs\",\r\n        \"TEns\",\r\n      ]);\r\n    } else {\r\n      left = this.left.inflect(tag, grammemes);\r\n    }\r\n    if (left && right) {\r\n      return new CombinedParse(left, right);\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  CombinedParse.prototype.toString = function() {\r\n    return this.left.word + \"-\" + this.right.word;\r\n  };\r\n\r\n  __init.push(function() {\r\n    Morph.Parsers.Dictionary = function(word, config) {\r\n      var isCapitalized =\r\n        !config.ignoreCase &&\r\n        word.length &&\r\n        word[0].toLocaleLowerCase() != word[0] &&\r\n        word.substr(1).toLocaleUpperCase() != word.substr(1);\r\n      word = word.toLocaleLowerCase();\r\n\r\n      var opts = lookup(words, word, config);\r\n\r\n      var vars = [];\r\n      for (var i = 0; i < opts.length; i++) {\r\n        for (var j = 0; j < opts[i][1].length; j++) {\r\n          var w = new DictionaryParse(\r\n            opts[i][0],\r\n            opts[i][1][j][0],\r\n            opts[i][1][j][1],\r\n            opts[i][2],\r\n            opts[i][3],\r\n          );\r\n          if (config.ignoreCase || !w.tag.isCapitalized() || isCapitalized) {\r\n            vars.push(w);\r\n          }\r\n        }\r\n      }\r\n      return vars;\r\n    };\r\n\r\n    var abbrTags = [];\r\n    for (var i = 0; i <= 2; i++) {\r\n      for (var j = 0; j <= 5; j++) {\r\n        for (var k = 0; k <= 1; k++) {\r\n          abbrTags.push(\r\n            makeTag(\r\n              \"NOUN,inan,\" +\r\n                [\"masc\", \"femn\", \"neut\"][i] +\r\n                \",Fixd,Abbr \" +\r\n                [\"sing\", \"plur\"][k] +\r\n                \",\" +\r\n                [\"nomn\", \"gent\", \"datv\", \"accs\", \"ablt\", \"loct\"][j],\r\n              \"СУЩ,неод,\" +\r\n                [\"мр\", \"жр\", \"ср\"][i] +\r\n                \",0,аббр \" +\r\n                [\"ед\", \"мн\"][k] +\r\n                \",\" +\r\n                [\"им\", \"рд\", \"дт\", \"вн\", \"тв\", \"пр\"][j],\r\n            ),\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    // Произвольные аббревиатуры (несклоняемые)\r\n    // ВК, ЖК, ССМО, ОАО, ЛенСпецСМУ\r\n    Morph.Parsers.Abbr = function(word, config) {\r\n      // Однобуквенные считаются инициалами и для них заведены отдельные парсеры\r\n      if (word.length < 2) {\r\n        return [];\r\n      }\r\n      // Дефисов в аббревиатуре быть не должно\r\n      if (word.indexOf(\"-\") > -1) {\r\n        return [];\r\n      }\r\n      // Первая буква должна быть заглавной: сокращения с маленькой буквы (типа iOS) мало распространены\r\n      // Последняя буква должна быть заглавной: иначе сокращение, вероятно, склоняется\r\n      if (\r\n        initials.indexOf(word[0]) > -1 &&\r\n        initials.indexOf(word[word.length - 1]) > -1\r\n      ) {\r\n        var caps = 0;\r\n        for (var i = 0; i < word.length; i++) {\r\n          if (initials.indexOf(word[i]) > -1) {\r\n            caps++;\r\n          }\r\n        }\r\n        if (caps <= 5) {\r\n          var vars = [];\r\n          for (var i = 0; i < abbrTags.length; i++) {\r\n            var w = new Parse(word, abbrTags[i], 0.5);\r\n            vars.push(w);\r\n          }\r\n          return vars;\r\n        }\r\n      }\r\n      // При игнорировании регистра разбираем только короткие аббревиатуры\r\n      // (и требуем, чтобы каждая буква была «инициалом», т.е. без мягких/твердых знаков)\r\n      if (!config.ignoreCase || word.length > 5) {\r\n        return [];\r\n      }\r\n      word = word.toLocaleUpperCase();\r\n      for (var i = 0; i < word.length; i++) {\r\n        if (initials.indexOf(word[i]) == -1) {\r\n          return [];\r\n        }\r\n      }\r\n      var vars = [];\r\n      for (var i = 0; i < abbrTags.length; i++) {\r\n        var w = new Parse(word, abbrTags[i], 0.2);\r\n        vars.push(w);\r\n      }\r\n      return vars;\r\n    };\r\n\r\n    var InitialsParser = function(isPatronymic, score) {\r\n      var initialsTags = [];\r\n      for (var i = 0; i <= 1; i++) {\r\n        for (var j = 0; j <= 5; j++) {\r\n          initialsTags.push(\r\n            makeTag(\r\n              \"NOUN,anim,\" +\r\n                [\"masc\", \"femn\"][i] +\r\n                \",Sgtm,Name,Fixd,Abbr,Init sing,\" +\r\n                [\"nomn\", \"gent\", \"datv\", \"accs\", \"ablt\", \"loct\"][j],\r\n              \"СУЩ,од,\" +\r\n                [\"мр\", \"жр\"][i] +\r\n                \",sg,имя,0,аббр,иниц ед,\" +\r\n                [\"им\", \"рд\", \"дт\", \"вн\", \"тв\", \"пр\"][j],\r\n            ),\r\n          );\r\n        }\r\n      }\r\n      return function(word, config) {\r\n        if (word.length != 1) {\r\n          return [];\r\n        }\r\n        if (config.ignoreCase) {\r\n          word = word.toLocaleUpperCase();\r\n        }\r\n        if (initials.indexOf(word) == -1) {\r\n          return [];\r\n        }\r\n        var vars = [];\r\n        for (var i = 0; i < initialsTags.length; i++) {\r\n          var w = new Parse(word, initialsTags[i], score);\r\n          vars.push(w);\r\n        }\r\n        return vars;\r\n      };\r\n    };\r\n\r\n    Morph.Parsers.AbbrName = InitialsParser(false, 0.1);\r\n    Morph.Parsers.AbbrPatronymic = InitialsParser(true, 0.1);\r\n\r\n    var RegexpParser = function(regexp, tag, score) {\r\n      return function(word, config) {\r\n        if (config.ignoreCase) {\r\n          word = word.toLocaleUpperCase();\r\n        }\r\n        if (word.length && word.match(regexp)) {\r\n          return [new Parse(word, tag)];\r\n        } else {\r\n          return [];\r\n        }\r\n      };\r\n    };\r\n\r\n    grammemes[\"NUMB\"] = grammemes[\"ЧИСЛО\"] = grammemes[\"ROMN\"] = grammemes[\r\n      \"РИМ\"\r\n    ] = grammemes[\"LATN\"] = grammemes[\"ЛАТ\"] = grammemes[\"PNCT\"] = grammemes[\r\n      \"ЗПР\"\r\n    ] = grammemes[\"UNKN\"] = grammemes[\"НЕИЗВ\"] = { parent: \"POST\" };\r\n\r\n    Morph.Parsers.IntNumber = RegexpParser(\r\n      /^[−-]?[0-9]+$/,\r\n      makeTag(\"NUMB,intg\", \"ЧИСЛО,цел\"),\r\n      0.9,\r\n    );\r\n\r\n    Morph.Parsers.RealNumber = RegexpParser(\r\n      /^[−-]?([0-9]*[.,][0-9]+)$/,\r\n      makeTag(\"NUMB,real\", \"ЧИСЛО,вещ\"),\r\n      0.9,\r\n    );\r\n\r\n    Morph.Parsers.Punctuation = RegexpParser(\r\n      /^[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,\\-.\\/:;<=>?@\\[\\]^_`{|}~]+$/,\r\n      makeTag(\"PNCT\", \"ЗПР\"),\r\n      0.9,\r\n    );\r\n\r\n    Morph.Parsers.RomanNumber = RegexpParser(\r\n      /^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/,\r\n      makeTag(\"ROMN\", \"РИМ\"),\r\n      0.9,\r\n    );\r\n\r\n    Morph.Parsers.Latin = RegexpParser(\r\n      /[A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00f6\\u00f8-\\u024f]$/,\r\n      makeTag(\"LATN\", \"ЛАТ\"),\r\n      0.9,\r\n    );\r\n\r\n    // слово + частица\r\n    // смотри-ка\r\n    Morph.Parsers.HyphenParticle = function(word, config) {\r\n      word = word.toLocaleLowerCase();\r\n\r\n      var vars = [];\r\n      for (var k = 0; k < particles.length; k++) {\r\n        if (word.substr(word.length - particles[k].length) == particles[k]) {\r\n          var base = word.slice(0, -particles[k].length);\r\n          var opts = lookup(words, base, config);\r\n\r\n          //console.log(opts);\r\n          for (var i = 0; i < opts.length; i++) {\r\n            for (var j = 0; j < opts[i][1].length; j++) {\r\n              var w = new DictionaryParse(\r\n                opts[i][0],\r\n                opts[i][1][j][0],\r\n                opts[i][1][j][1],\r\n                opts[i][2],\r\n                opts[i][3],\r\n                \"\",\r\n                particles[k],\r\n              );\r\n              w.score *= 0.9;\r\n              vars.push(w);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return vars;\r\n    };\r\n\r\n    var ADVB = makeTag(\"ADVB\", \"Н\");\r\n\r\n    // 'по-' + прилагательное в дательном падеже\r\n    // по-западному\r\n    Morph.Parsers.HyphenAdverb = function(word, config) {\r\n      word = word.toLocaleLowerCase();\r\n\r\n      if (word.length < 5 || word.substr(0, 3) != \"по-\") {\r\n        return [];\r\n      }\r\n\r\n      var opts = lookup(words, word.substr(3), config);\r\n\r\n      var parses = [];\r\n      var used = {};\r\n\r\n      for (var i = 0; i < opts.length; i++) {\r\n        if (!used[opts[i][0]]) {\r\n          for (var j = 0; j < opts[i][1].length; j++) {\r\n            var parse = new DictionaryParse(\r\n              opts[i][0],\r\n              opts[i][1][j][0],\r\n              opts[i][1][j][1],\r\n              opts[i][2],\r\n              opts[i][3],\r\n            );\r\n            if (parse.matches([\"ADJF\", \"sing\", \"datv\"])) {\r\n              used[opts[i][0]] = true;\r\n\r\n              parse = new Parse(\r\n                \"по-\" + opts[i][0],\r\n                ADVB,\r\n                parse.score * 0.9,\r\n                opts[i][2],\r\n                opts[i][3],\r\n              );\r\n              parses.push(parse);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return parses;\r\n    };\r\n\r\n    // слово + '-' + слово\r\n    // интернет-магазин\r\n    // компания-производитель\r\n    Morph.Parsers.HyphenWords = function(word, config) {\r\n      word = word.toLocaleLowerCase();\r\n      for (var i = 0; i < knownPrefixes.length; i++) {\r\n        if (\r\n          knownPrefixes[i][knownPrefixes[i].length - 1] == \"-\" &&\r\n          word.substr(0, knownPrefixes[i].length) == knownPrefixes[i]\r\n        ) {\r\n          return [];\r\n        }\r\n      }\r\n      var parses = [];\r\n      var parts = word.split(\"-\");\r\n      if (parts.length != 2 || !parts[0].length || !parts[1].length) {\r\n        if (parts.length > 2) {\r\n          var end = parts[parts.length - 1];\r\n          var right = Morph.Parsers.Dictionary(end, config);\r\n          for (var j = 0; j < right.length; j++) {\r\n            if (right[j] instanceof DictionaryParse) {\r\n              right[j].score *= 0.2;\r\n              right[j].prefix =\r\n                word.substr(0, word.length - end.length - 1) + \"-\";\r\n              parses.push(right[j]);\r\n            }\r\n          }\r\n        }\r\n        return parses;\r\n      }\r\n      var left = Morph.Parsers.Dictionary(parts[0], config);\r\n      var right = Morph.Parsers.Dictionary(parts[1], config);\r\n\r\n      // Variable\r\n      for (var i = 0; i < left.length; i++) {\r\n        if (left[i].tag.Abbr) {\r\n          continue;\r\n        }\r\n        for (var j = 0; j < right.length; j++) {\r\n          if (\r\n            !left[i].matches(right[j], [\"POST\", \"NMbr\", \"CAse\", \"PErs\", \"TEns\"])\r\n          ) {\r\n            continue;\r\n          }\r\n          if (\r\n            left[i].stutterCnt + right[j].stutterCnt > config.stutter ||\r\n            left[i].typosCnt + right[j].typosCnt > config.typos\r\n          ) {\r\n            continue;\r\n          }\r\n          parses.push(new CombinedParse(left[i], right[j]));\r\n        }\r\n      }\r\n      // Fixed\r\n      for (var j = 0; j < right.length; j++) {\r\n        if (right[j] instanceof DictionaryParse) {\r\n          right[j].score *= 0.3;\r\n          right[j].prefix = parts[0] + \"-\";\r\n          parses.push(right[j]);\r\n        }\r\n      }\r\n\r\n      return parses;\r\n    };\r\n\r\n    Morph.Parsers.PrefixKnown = function(word, config) {\r\n      var isCapitalized =\r\n        !config.ignoreCase &&\r\n        word.length &&\r\n        word[0].toLocaleLowerCase() != word[0] &&\r\n        word.substr(1).toLocaleUpperCase() != word.substr(1);\r\n      word = word.toLocaleLowerCase();\r\n      var parses = [];\r\n      for (var i = 0; i < knownPrefixes.length; i++) {\r\n        if (word.length - knownPrefixes[i].length < 3) {\r\n          continue;\r\n        }\r\n\r\n        if (word.substr(0, knownPrefixes[i].length) == knownPrefixes[i]) {\r\n          var end = word.substr(knownPrefixes[i].length);\r\n          var right = Morph.Parsers.Dictionary(end, config);\r\n          for (var j = 0; j < right.length; j++) {\r\n            if (!right[j].tag.isProductive()) {\r\n              continue;\r\n            }\r\n            if (\r\n              !config.ignoreCase &&\r\n              right[j].tag.isCapitalized() &&\r\n              !isCapitalized\r\n            ) {\r\n              continue;\r\n            }\r\n            right[j].score *= 0.7;\r\n            right[j].prefix = knownPrefixes[i];\r\n            parses.push(right[j]);\r\n          }\r\n        }\r\n      }\r\n      return parses;\r\n    };\r\n\r\n    Morph.Parsers.PrefixUnknown = function(word, config) {\r\n      var isCapitalized =\r\n        !config.ignoreCase &&\r\n        word.length &&\r\n        word[0].toLocaleLowerCase() != word[0] &&\r\n        word.substr(1).toLocaleUpperCase() != word.substr(1);\r\n      word = word.toLocaleLowerCase();\r\n      var parses = [];\r\n      for (var len = 1; len <= 5; len++) {\r\n        if (word.length - len < 3) {\r\n          break;\r\n        }\r\n        var end = word.substr(len);\r\n        var right = Morph.Parsers.Dictionary(end, config);\r\n        for (var j = 0; j < right.length; j++) {\r\n          if (!right[j].tag.isProductive()) {\r\n            continue;\r\n          }\r\n          if (\r\n            !config.ignoreCase &&\r\n            right[j].tag.isCapitalized() &&\r\n            !isCapitalized\r\n          ) {\r\n            continue;\r\n          }\r\n          right[j].score *= 0.3;\r\n          right[j].prefix = word.substr(0, len);\r\n          parses.push(right[j]);\r\n        }\r\n      }\r\n      return parses;\r\n    };\r\n\r\n    // Отличие от предсказателя по суффиксам в pymorphy2: найдя подходящий суффикс, проверяем ещё и тот, что на символ короче\r\n    Morph.Parsers.SuffixKnown = function(word, config) {\r\n      if (word.length < 4) {\r\n        return [];\r\n      }\r\n      var isCapitalized =\r\n        !config.ignoreCase &&\r\n        word.length &&\r\n        word[0].toLocaleLowerCase() != word[0] &&\r\n        word.substr(1).toLocaleUpperCase() != word.substr(1);\r\n      word = word.toLocaleLowerCase();\r\n      var parses = [];\r\n      var minlen = 1;\r\n      var coeffs = [0, 0.2, 0.3, 0.4, 0.5, 0.6];\r\n      var used = {};\r\n      for (var i = 0; i < prefixes.length; i++) {\r\n        if (\r\n          prefixes[i].length &&\r\n          word.substr(0, prefixes[i].length) != prefixes[i]\r\n        ) {\r\n          continue;\r\n        }\r\n        var base = word.substr(prefixes[i].length);\r\n        for (var len = 5; len >= minlen; len--) {\r\n          if (len >= base.length) {\r\n            continue;\r\n          }\r\n          var left = base.substr(0, base.length - len);\r\n          var right = base.substr(base.length - len);\r\n          var entries = predictionSuffixes[i].findAll(\r\n            right,\r\n            config.replacements,\r\n            0,\r\n            0,\r\n          );\r\n          if (!entries) {\r\n            continue;\r\n          }\r\n\r\n          var p = [];\r\n          var max = 1;\r\n          for (var j = 0; j < entries.length; j++) {\r\n            var suffix = entries[j][0];\r\n            var stats = entries[j][1];\r\n\r\n            for (var k = 0; k < stats.length; k++) {\r\n              var parse = new DictionaryParse(\r\n                prefixes[i] + left + suffix,\r\n                stats[k][1],\r\n                stats[k][2],\r\n              );\r\n              // Why there is even non-productive forms in suffix DAWGs?\r\n              if (!parse.tag.isProductive()) {\r\n                continue;\r\n              }\r\n              if (\r\n                !config.ignoreCase &&\r\n                parse.tag.isCapitalized() &&\r\n                !isCapitalized\r\n              ) {\r\n                continue;\r\n              }\r\n              var key =\r\n                parse.toString() + \":\" + stats[k][1] + \":\" + stats[k][2];\r\n              if (key in used) {\r\n                continue;\r\n              }\r\n              max = Math.max(max, stats[k][0]);\r\n              parse.score = stats[k][0] * coeffs[len];\r\n              p.push(parse);\r\n              used[key] = true;\r\n            }\r\n          }\r\n          if (p.length > 0) {\r\n            for (var j = 0; j < p.length; j++) {\r\n              p[j].score /= max;\r\n            }\r\n            parses = parses.concat(p);\r\n            // Check also suffixes 1 letter shorter\r\n            minlen = Math.max(len - 1, 1);\r\n          }\r\n        }\r\n      }\r\n      return parses;\r\n    };\r\n\r\n    UNKN = makeTag(\"UNKN\", \"НЕИЗВ\");\r\n  });\r\n\r\n  /**\r\n   * Задает опции морфологического анализатора по умолчанию.\r\n   *\r\n   * @param {Object} config Опции анализатора.\r\n   * @see Morph\r\n   */\r\n  Morph.setDefaults = function(config) {\r\n    defaults = config;\r\n  };\r\n\r\n  /**\r\n   * Инициализирует анализатор, загружая необходимые для работы словари из\r\n   * указанной директории. Эту функцию необходимо вызвать (и дождаться\r\n   * срабатывания коллбэка) до любых действий с модулем.\r\n   *\r\n   * @param {string} [path] Директория, содержащая файлы 'words.dawg',\r\n   * 'grammemes.json' и т.д. По умолчанию директория 'dicts' в данном модуле.\r\n   * @param {Function} callback Коллбэк, вызываемый после завершения загрузки\r\n   *  всех словарей.\r\n   */\r\n  Morph.init = function(path, callback) {\r\n    var loading = 0;\r\n    var tagsInt, tagsExt;\r\n    function loaded() {\r\n      if (!--loading) {\r\n        tags = Array(tagsInt.length);\r\n        for (var i = 0; i < tagsInt.length; i++) {\r\n          tags[i] = new Tag(tagsInt[i]);\r\n          tags[i].ext = new Tag(tagsExt[i]);\r\n        }\r\n        tags = deepFreeze(tags);\r\n        for (var i = 0; i < __init.length; i++) {\r\n          __init[i]();\r\n        }\r\n        initialized = true;\r\n        callback && callback(null, Morph);\r\n      }\r\n    }\r\n\r\n    if (!callback && typeof path == \"function\") {\r\n      callback = path;\r\n      if (typeof __dirname == \"string\") {\r\n        path = __dirname + \"/../dicts\";\r\n      } else {\r\n        path = \"dicts\";\r\n      }\r\n    }\r\n\r\n    loading++;\r\n    Az.DAWG.load(path + \"/words.dawg\", \"words\", function(err, dawg) {\r\n      if (err) {\r\n        callback(err);\r\n        return;\r\n      }\r\n      words = dawg;\r\n      loaded();\r\n    });\r\n\r\n    for (var prefix = 0; prefix < 3; prefix++) {\r\n      (function(prefix) {\r\n        loading++;\r\n        Az.DAWG.load(\r\n          path + \"/prediction-suffixes-\" + prefix + \".dawg\",\r\n          \"probs\",\r\n          function(err, dawg) {\r\n            if (err) {\r\n              callback(err);\r\n              return;\r\n            }\r\n            predictionSuffixes[prefix] = dawg;\r\n            loaded();\r\n          },\r\n        );\r\n      })(prefix);\r\n    }\r\n\r\n    loading++;\r\n    Az.DAWG.load(path + \"/p_t_given_w.intdawg\", \"int\", function(err, dawg) {\r\n      if (err) {\r\n        callback(err);\r\n        return;\r\n      }\r\n      probabilities = dawg;\r\n      loaded();\r\n    });\r\n\r\n    loading++;\r\n    Az.load(path + \"/grammemes.json\", \"json\", function(err, json) {\r\n      if (err) {\r\n        callback(err);\r\n        return;\r\n      }\r\n      grammemes = {};\r\n      for (var i = 0; i < json.length; i++) {\r\n        grammemes[json[i][0]] = grammemes[json[i][2]] = {\r\n          parent: json[i][1],\r\n          internal: json[i][0],\r\n          external: json[i][2],\r\n          externalFull: json[i][3],\r\n        };\r\n      }\r\n      loaded();\r\n    });\r\n\r\n    loading++;\r\n    Az.load(path + \"/gramtab-opencorpora-int.json\", \"json\", function(\r\n      err,\r\n      json,\r\n    ) {\r\n      if (err) {\r\n        callback(err);\r\n        return;\r\n      }\r\n      tagsInt = json;\r\n      loaded();\r\n    });\r\n\r\n    loading++;\r\n    Az.load(path + \"/gramtab-opencorpora-ext.json\", \"json\", function(\r\n      err,\r\n      json,\r\n    ) {\r\n      if (err) {\r\n        callback(err);\r\n        return;\r\n      }\r\n      tagsExt = json;\r\n      loaded();\r\n    });\r\n\r\n    loading++;\r\n    Az.load(path + \"/suffixes.json\", \"json\", function(err, json) {\r\n      if (err) {\r\n        callback(err);\r\n        return;\r\n      }\r\n      suffixes = json;\r\n      loaded();\r\n    });\r\n\r\n    loading++;\r\n    Az.load(path + \"/paradigms.array\", \"arraybuffer\", function(err, data) {\r\n      if (err) {\r\n        callback(err);\r\n        return;\r\n      }\r\n\r\n      var list = new Uint16Array(data),\r\n        count = list[0],\r\n        pos = 1;\r\n\r\n      paradigms = [];\r\n      for (var i = 0; i < count; i++) {\r\n        var size = list[pos++];\r\n        paradigms.push(list.subarray(pos, pos + size));\r\n        pos += size;\r\n      }\r\n      loaded();\r\n    });\r\n  };\r\n\r\n  return Morph;\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6507e1b6&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('div',{ref:\"text\",staticClass:\"text\"},[_c('p',[_vm._v(\"\\n      Текст (от лат. textus — «ткань; сплетение, связь, паутина, сочетание»)\\n      — зафиксированная на каком-либо материальном носителе человеческая\\n      мысль; в общем плане связная и полная последовательность символов.\\n    \")]),_c('p',[_vm._v(\"\\n      Существуют две основные трактовки понятия «текст»: «имманентная»\\n      (расширенная, философски нагруженная) и «репрезентативная» (более\\n      частная). Имманентный подход подразумевает отношение к тексту как к\\n      автономной реальности, нацеленность на выявление его внутренней\\n      структуры. Репрезентативный — рассмотрение текста как особой формы\\n      представления знаний о внешней тексту действительности.\\n    \")]),_c('p',[_vm._v(\"\\n      В лингвистике термин текст используется в широком значении, включая и\\n      образцы устной речи. Восприятие текста изучается в рамках лингвистики\\n      текста и психолингвистики. Так, например, И. Р. Гальперин определяет\\n      текст следующим образом: «это письменное сообщение, объективированное\\n      в виде письменного документа, состоящее из ряда высказываний,\\n      объединённых разными типами лексической, грамматической и логической\\n      связи, имеющее определённый моральный характер, прагматическую\\n      установку и соответственно литературно обработанное»[1].\\n    \")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export function DAWG(Az) {\r\n  var ROOT = 0,\r\n    MISSING = -1,\r\n    PRECISION_MASK = 0xffffffff,\r\n    HAS_LEAF_BIT = 1 << 8,\r\n    EXTENSION_BIT = 1 << 9,\r\n    OFFSET_MAX = 1 << 21,\r\n    IS_LEAF_BIT = 1 << 31;\r\n\r\n  var CP1251 = {\r\n    0: 0,\r\n    1: 1,\r\n    2: 2,\r\n    3: 3,\r\n    4: 4,\r\n    5: 5,\r\n    6: 6,\r\n    7: 7,\r\n    8: 8,\r\n    9: 9,\r\n    10: 10,\r\n    11: 11,\r\n    12: 12,\r\n    13: 13,\r\n    14: 14,\r\n    15: 15,\r\n    16: 16,\r\n    17: 17,\r\n    18: 18,\r\n    19: 19,\r\n    20: 20,\r\n    21: 21,\r\n    22: 22,\r\n    23: 23,\r\n    24: 24,\r\n    25: 25,\r\n    26: 26,\r\n    27: 27,\r\n    28: 28,\r\n    29: 29,\r\n    30: 30,\r\n    31: 31,\r\n    32: 32,\r\n    33: 33,\r\n    34: 34,\r\n    35: 35,\r\n    36: 36,\r\n    37: 37,\r\n    38: 38,\r\n    39: 39,\r\n    40: 40,\r\n    41: 41,\r\n    42: 42,\r\n    43: 43,\r\n    44: 44,\r\n    45: 45,\r\n    46: 46,\r\n    47: 47,\r\n    48: 48,\r\n    49: 49,\r\n    50: 50,\r\n    51: 51,\r\n    52: 52,\r\n    53: 53,\r\n    54: 54,\r\n    55: 55,\r\n    56: 56,\r\n    57: 57,\r\n    58: 58,\r\n    59: 59,\r\n    60: 60,\r\n    61: 61,\r\n    62: 62,\r\n    63: 63,\r\n    64: 64,\r\n    65: 65,\r\n    66: 66,\r\n    67: 67,\r\n    68: 68,\r\n    69: 69,\r\n    70: 70,\r\n    71: 71,\r\n    72: 72,\r\n    73: 73,\r\n    74: 74,\r\n    75: 75,\r\n    76: 76,\r\n    77: 77,\r\n    78: 78,\r\n    79: 79,\r\n    80: 80,\r\n    81: 81,\r\n    82: 82,\r\n    83: 83,\r\n    84: 84,\r\n    85: 85,\r\n    86: 86,\r\n    87: 87,\r\n    88: 88,\r\n    89: 89,\r\n    90: 90,\r\n    91: 91,\r\n    92: 92,\r\n    93: 93,\r\n    94: 94,\r\n    95: 95,\r\n    96: 96,\r\n    97: 97,\r\n    98: 98,\r\n    99: 99,\r\n    100: 100,\r\n    101: 101,\r\n    102: 102,\r\n    103: 103,\r\n    104: 104,\r\n    105: 105,\r\n    106: 106,\r\n    107: 107,\r\n    108: 108,\r\n    109: 109,\r\n    110: 110,\r\n    111: 111,\r\n    112: 112,\r\n    113: 113,\r\n    114: 114,\r\n    115: 115,\r\n    116: 116,\r\n    117: 117,\r\n    118: 118,\r\n    119: 119,\r\n    120: 120,\r\n    121: 121,\r\n    122: 122,\r\n    123: 123,\r\n    124: 124,\r\n    125: 125,\r\n    126: 126,\r\n    127: 127,\r\n    1027: 129,\r\n    8225: 135,\r\n    1046: 198,\r\n    8222: 132,\r\n    1047: 199,\r\n    1168: 165,\r\n    1048: 200,\r\n    1113: 154,\r\n    1049: 201,\r\n    1045: 197,\r\n    1050: 202,\r\n    1028: 170,\r\n    160: 160,\r\n    1040: 192,\r\n    1051: 203,\r\n    164: 164,\r\n    166: 166,\r\n    167: 167,\r\n    169: 169,\r\n    171: 171,\r\n    172: 172,\r\n    173: 173,\r\n    174: 174,\r\n    1053: 205,\r\n    176: 176,\r\n    177: 177,\r\n    1114: 156,\r\n    181: 181,\r\n    182: 182,\r\n    183: 183,\r\n    8221: 148,\r\n    187: 187,\r\n    1029: 189,\r\n    1056: 208,\r\n    1057: 209,\r\n    1058: 210,\r\n    8364: 136,\r\n    1112: 188,\r\n    1115: 158,\r\n    1059: 211,\r\n    1060: 212,\r\n    1030: 178,\r\n    1061: 213,\r\n    1062: 214,\r\n    1063: 215,\r\n    1116: 157,\r\n    1064: 216,\r\n    1065: 217,\r\n    1031: 175,\r\n    1066: 218,\r\n    1067: 219,\r\n    1068: 220,\r\n    1069: 221,\r\n    1070: 222,\r\n    1032: 163,\r\n    8226: 149,\r\n    1071: 223,\r\n    1072: 224,\r\n    8482: 153,\r\n    1073: 225,\r\n    8240: 137,\r\n    1118: 162,\r\n    1074: 226,\r\n    1110: 179,\r\n    8230: 133,\r\n    1075: 227,\r\n    1033: 138,\r\n    1076: 228,\r\n    1077: 229,\r\n    8211: 150,\r\n    1078: 230,\r\n    1119: 159,\r\n    1079: 231,\r\n    1042: 194,\r\n    1080: 232,\r\n    1034: 140,\r\n    1025: 168,\r\n    1081: 233,\r\n    1082: 234,\r\n    8212: 151,\r\n    1083: 235,\r\n    1169: 180,\r\n    1084: 236,\r\n    1052: 204,\r\n    1085: 237,\r\n    1035: 142,\r\n    1086: 238,\r\n    1087: 239,\r\n    1088: 240,\r\n    1089: 241,\r\n    1090: 242,\r\n    1036: 141,\r\n    1041: 193,\r\n    1091: 243,\r\n    1092: 244,\r\n    8224: 134,\r\n    1093: 245,\r\n    8470: 185,\r\n    1094: 246,\r\n    1054: 206,\r\n    1095: 247,\r\n    1096: 248,\r\n    8249: 139,\r\n    1097: 249,\r\n    1098: 250,\r\n    1044: 196,\r\n    1099: 251,\r\n    1111: 191,\r\n    1055: 207,\r\n    1100: 252,\r\n    1038: 161,\r\n    8220: 147,\r\n    1101: 253,\r\n    8250: 155,\r\n    1102: 254,\r\n    8216: 145,\r\n    1103: 255,\r\n    1043: 195,\r\n    1105: 184,\r\n    1039: 143,\r\n    1026: 128,\r\n    1106: 144,\r\n    8218: 130,\r\n    1107: 131,\r\n    8217: 146,\r\n    1108: 186,\r\n    1109: 190,\r\n  };\r\n\r\n  var UCS2 = {};\r\n  for (var k in CP1251) {\r\n    UCS2[CP1251[k]] = String.fromCharCode(k);\r\n    delete UCS2[0];\r\n    delete UCS2[1];\r\n  }\r\n\r\n  // Based on all common ЙЦУКЕН-keyboards (both Windows and Apple variations)\r\n  var COMMON_TYPOS = {\r\n    й: \"иёцыф\",\r\n    ц: \"йфыву\",\r\n    у: \"цывак\",\r\n    к: \"увапе\",\r\n    е: \"эикапрн\",\r\n    н: \"епрог\",\r\n    г: \"нролш\",\r\n    ш: \"жголдщ\",\r\n    щ: \"шлджз\",\r\n    з: \"щджэх-\",\r\n    х: \"зжэъ-\",\r\n    ъ: \"ьхэ-ё\",\r\n    ф: \"йцычяё\",\r\n    ы: \"иойцувсчяф\",\r\n    в: \"фцукамсчы\",\r\n    а: \"оукепимсв\",\r\n    п: \"кенртима\",\r\n    р: \"енгоьтип\",\r\n    о: \"ангшлбьтр\",\r\n    л: \"гшщдюбьо\",\r\n    д: \"шщзжюбл\",\r\n    ж: \"шщзхэюд\",\r\n    э: \"езхъжё\",\r\n    ё: \"йфяъэ\",\r\n    я: \"еёфыч\",\r\n    ч: \"яфывс\",\r\n    с: \"зчывам\",\r\n    м: \"свапи\",\r\n    и: \"йяемапрт\",\r\n    т: \"дипроь\",\r\n    ь: \"ътролб\",\r\n    б: \"ьолдю\",\r\n    ю: \"блдж\",\r\n    \"1\": \"ёйц\",\r\n    \"2\": \"йцу\",\r\n    \"3\": \"цук\",\r\n    \"4\": \"уке\",\r\n    \"5\": \"кен\",\r\n    \"6\": \"енг\",\r\n    \"7\": \"нгш\",\r\n    \"8\": \"гшщ\",\r\n    \"9\": \"шщз\",\r\n    \"0\": \"щзх-\",\r\n    \"-\": \"зхъ\",\r\n    \"=\": \"-хъ\",\r\n    \"\\\\\": \"ъэ\",\r\n    \".\": \"южэ\",\r\n  };\r\n\r\n  function offset(base) {\r\n    return ((base >> 10) << ((base & EXTENSION_BIT) >> 6)) & PRECISION_MASK;\r\n  }\r\n\r\n  function label(base) {\r\n    return base & (IS_LEAF_BIT | 0xff) & PRECISION_MASK;\r\n  }\r\n\r\n  function hasLeaf(base) {\r\n    return (base & HAS_LEAF_BIT & PRECISION_MASK) != 0;\r\n  }\r\n\r\n  function value(base) {\r\n    return base & ~IS_LEAF_BIT & PRECISION_MASK;\r\n  }\r\n\r\n  var DAWG = function(units, guide, format) {\r\n    this.units = units;\r\n    this.guide = guide;\r\n    this.format = format;\r\n  };\r\n\r\n  DAWG.fromArrayBuffer = function(data, format) {\r\n    var dv = new DataView(data),\r\n      unitsLength = dv.getUint32(0, true),\r\n      guideLength = dv.getUint32(unitsLength * 4 + 4, true);\r\n    return new DAWG(\r\n      new Uint32Array(data, 4, unitsLength),\r\n      new Uint8Array(data, unitsLength * 4 + 8, guideLength * 2),\r\n      format,\r\n    );\r\n  };\r\n\r\n  DAWG.load = function(url, format, callback) {\r\n    Az.load(url, \"arraybuffer\", function(err, data) {\r\n      callback(err, err ? null : DAWG.fromArrayBuffer(data, format));\r\n    });\r\n  };\r\n\r\n  DAWG.prototype.followByte = function(c, index) {\r\n    var o = offset(this.units[index]);\r\n    var nextIndex = (index ^ o ^ (c & 0xff)) & PRECISION_MASK;\r\n\r\n    if (label(this.units[nextIndex]) != (c & 0xff)) {\r\n      return MISSING;\r\n    }\r\n\r\n    return nextIndex;\r\n  };\r\n\r\n  DAWG.prototype.followString = function(str, index) {\r\n    index = index || ROOT;\r\n    for (var i = 0; i < str.length; i++) {\r\n      var code = str.charCodeAt(i);\r\n      if (!(code in CP1251)) {\r\n        return MISSING;\r\n      }\r\n      index = this.followByte(CP1251[code], index);\r\n      if (index == MISSING) {\r\n        return MISSING;\r\n      }\r\n    }\r\n    return index;\r\n  };\r\n\r\n  DAWG.prototype.hasValue = function(index) {\r\n    return hasLeaf(this.units[index]);\r\n  };\r\n\r\n  DAWG.prototype.value = function(index) {\r\n    var o = offset(this.units[index]);\r\n    var valueIndex = (index ^ o) & PRECISION_MASK;\r\n    return value(this.units[valueIndex]);\r\n  };\r\n\r\n  DAWG.prototype.find = function(str) {\r\n    var index = this.followString(str);\r\n    if (index == MISSING) {\r\n      return MISSING;\r\n    }\r\n    if (!this.hasValue(index)) {\r\n      return MISSING;\r\n    }\r\n    return this.value(index);\r\n  };\r\n\r\n  DAWG.prototype.iterateAll = function(index) {\r\n    var results = [];\r\n    var stack = [index];\r\n    var key = [];\r\n    var last = ROOT;\r\n    var label;\r\n\r\n    while (true) {\r\n      index = stack[stack.length - 1];\r\n\r\n      if (last != ROOT) {\r\n        label = this.guide[index << 1];\r\n        if (label) {\r\n          index = this.followByte(label, index);\r\n          if (index == MISSING) {\r\n            return results;\r\n          }\r\n          key.push(label);\r\n          stack.push(index);\r\n        } else {\r\n          do {\r\n            label = this.guide[(index << 1) + 1];\r\n            key.pop();\r\n            stack.pop();\r\n            if (!stack.length) {\r\n              return results;\r\n            }\r\n            index = stack[stack.length - 1];\r\n            if (label) {\r\n              index = this.followByte(label, index);\r\n              if (index == MISSING) {\r\n                return results;\r\n              }\r\n              key.push(label);\r\n              stack.push(index);\r\n            }\r\n          } while (!label);\r\n        }\r\n      }\r\n\r\n      while (!this.hasValue(index)) {\r\n        var label = this.guide[index << 1];\r\n        index = this.followByte(label, index);\r\n        if (index == MISSING) {\r\n          return results;\r\n        }\r\n        key.push(label);\r\n        stack.push(index);\r\n      }\r\n\r\n      // Only three formats supported\r\n      if (this.format == \"words\") {\r\n        results.push([\r\n          ((key[0] ^ 1) << 6) + (key[1] >> 1),\r\n          ((key[2] ^ 1) << 6) + (key[3] >> 1),\r\n        ]);\r\n      } else if (this.format == \"probs\") {\r\n        results.push([\r\n          ((key[0] ^ 1) << 6) + (key[1] >> 1),\r\n          ((key[2] ^ 1) << 6) + (key[3] >> 1),\r\n          ((key[4] ^ 1) << 6) + (key[5] >> 1),\r\n        ]);\r\n      } else {\r\n        // Raw bytes\r\n        results.push(key.slice());\r\n      }\r\n      last = index;\r\n    }\r\n  };\r\n\r\n  // Features:\r\n  //  replaces (е -> ё) (DONE)\r\n  //  stutter (ннет -> нет, гоол -> гол, д-да -> да)\r\n  //  typos (count-limited):\r\n  //    swaps (солво -> слово)\r\n  //    extra letters (свлово -> слово)\r\n  //    missing letters (сово -> слово)\r\n  //    wrong letters (сково -> слово)\r\n  DAWG.prototype.findAll = function(str, replaces, mstutter, mtypos) {\r\n    mtypos = mtypos || 0;\r\n    mstutter = mstutter || 0;\r\n    var results = [],\r\n      prefixes = [[\"\", 0, 0, 0, ROOT]],\r\n      prefix,\r\n      index,\r\n      len,\r\n      code,\r\n      cur,\r\n      typos,\r\n      stutter;\r\n\r\n    while (prefixes.length) {\r\n      prefix = prefixes.pop();\r\n      (index = prefix[4]),\r\n        (stutter = prefix[3]),\r\n        (typos = prefix[2]),\r\n        (len = prefix[1]),\r\n        (prefix = prefix[0]);\r\n\r\n      // Done\r\n      if (len == str.length) {\r\n        if (typos < mtypos && stutter <= mstutter) {\r\n          // Allow missing letter(s) at the very end\r\n          var label = this.guide[index << 1]; // First child\r\n          do {\r\n            cur = this.followByte(label, index);\r\n            if (cur != MISSING && label in UCS2) {\r\n              prefixes.push([\r\n                prefix + UCS2[label],\r\n                len,\r\n                typos + 1,\r\n                stutter,\r\n                cur,\r\n              ]);\r\n            }\r\n            label = this.guide[(cur << 1) + 1]; // Next child\r\n          } while (cur != MISSING);\r\n        }\r\n\r\n        if (this.format == \"int\") {\r\n          if (this.hasValue(index)) {\r\n            results.push([prefix, this.value(index)]);\r\n          }\r\n          continue;\r\n        }\r\n        // Find all payloads\r\n        if (this.format == \"words\" || this.format == \"probs\") {\r\n          index = this.followByte(1, index); // separator\r\n          if (index == MISSING) {\r\n            continue;\r\n          }\r\n        }\r\n        results.push([prefix, this.iterateAll(index), stutter, typos]);\r\n        continue;\r\n      }\r\n\r\n      // Follow a replacement path\r\n      if (replaces && str[len] in replaces) {\r\n        code = replaces[str[len]].charCodeAt(0);\r\n        if (code in CP1251) {\r\n          cur = this.followByte(CP1251[code], index);\r\n          if (cur != MISSING) {\r\n            prefixes.push([\r\n              prefix + replaces[str[len]],\r\n              len + 1,\r\n              typos,\r\n              stutter,\r\n              cur,\r\n            ]);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Follow typos path (if not over limit)\r\n      if (typos < mtypos && stutter <= mstutter) {\r\n        // Skip a letter entirely (extra letter)\r\n        prefixes.push([prefix, len + 1, typos + 1, stutter, index]);\r\n\r\n        // Add a letter (missing)\r\n        // TODO: iterate all childs?\r\n        var label = this.guide[index << 1]; // First child\r\n        do {\r\n          cur = this.followByte(label, index);\r\n          if (cur != MISSING && label in UCS2) {\r\n            prefixes.push([prefix + UCS2[label], len, typos + 1, stutter, cur]);\r\n          }\r\n          label = this.guide[(cur << 1) + 1]; // Next child\r\n        } while (cur != MISSING);\r\n\r\n        // Replace a letter\r\n        // Now it checks only most probable typos (located near to each other on keyboards)\r\n        var possible = COMMON_TYPOS[str[len]];\r\n        if (possible) {\r\n          for (var i = 0; i < possible.length; i++) {\r\n            code = possible.charCodeAt(i);\r\n            if (code in CP1251) {\r\n              cur = this.followByte(CP1251[code], index);\r\n              if (cur != MISSING) {\r\n                // for missing letter we need to iterate all childs, not only COMMON_TYPOS\r\n                // prefixes.push([ prefix + possible[i], len, typos + 1, stutter, cur ]);\r\n                prefixes.push([\r\n                  prefix + possible[i],\r\n                  len + 1,\r\n                  typos + 1,\r\n                  stutter,\r\n                  cur,\r\n                ]);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Swapped two letters\r\n        // TODO: support for replacements?\r\n        if (len < str.length - 1) {\r\n          code = str.charCodeAt(len + 1);\r\n          if (code in CP1251) {\r\n            cur = this.followByte(CP1251[code], index);\r\n            if (cur != MISSING) {\r\n              code = str.charCodeAt(len);\r\n              if (code in CP1251) {\r\n                cur = this.followByte(CP1251[code], cur);\r\n                if (cur != MISSING) {\r\n                  prefixes.push([\r\n                    prefix + str[len + 1] + str[len],\r\n                    len + 2,\r\n                    typos + 1,\r\n                    stutter,\r\n                    cur,\r\n                  ]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Follow base path\r\n      code = str.charCodeAt(len);\r\n      if (code in CP1251) {\r\n        cur = this.followByte(CP1251[code], index);\r\n        if (cur != MISSING) {\r\n          prefixes.push([prefix + str[len], len + 1, typos, stutter, cur]);\r\n\r\n          while (\r\n            stutter < mstutter &&\r\n            typos <= mtypos &&\r\n            len < str.length - 1\r\n          ) {\r\n            // Follow a simple stutter path (merge two equal letters into one)\r\n            if (str[len] == str[len + 1]) {\r\n              prefixes.push([\r\n                prefix + str[len],\r\n                len + 2,\r\n                typos,\r\n                stutter + 1,\r\n                cur,\r\n              ]);\r\n              len++;\r\n            }\r\n            // Follow a stutter with a dash (д-да)\r\n            else if (\r\n              len < str.length - 2 &&\r\n              str[len + 1] == \"-\" &&\r\n              str[len] == str[len + 2]\r\n            ) {\r\n              prefixes.push([\r\n                prefix + str[len],\r\n                len + 3,\r\n                typos,\r\n                stutter + 1,\r\n                cur,\r\n              ]);\r\n              len += 2;\r\n            } else {\r\n              break;\r\n            }\r\n            stutter++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return results;\r\n  };\r\n\r\n  return DAWG;\r\n}\r\n","export function Tokens(Az) {\r\n  var TLDs = \"ac|ad|ae|aero|af|ag|ai|al|am|ao|aq|ar|arpa|as|asia|at|au|aw|ax|az|ba|bb|be|bf|bg|bh|bi|biz|bj|bm|bo|br|bs|bt|bv|bw|by|bz|ca|cat|cc|cd|cf|cg|ch|ci|cl|cm|cn|co|com|coop|cr|cu|cv|cw|cx|cz|de|dj|dk|dm|do|dz|ec|edu|ee|eg|es|et|eu|fi|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gov|gp|gq|gr|gs|gt|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|info|int|io|iq|ir|is|it|je|jo|jobs|jp|kg|ki|km|kn|kp|kr|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mil|mk|ml|mn|mo|mobi|mp|mq|mr|ms|mt|mu|museum|mv|mw|mx|my|na|name|nc|ne|net|nf|ng|nl|no|nr|nu|nz|om|org|pa|pe|pf|ph|pk|pl|pm|pn|post|pr|pro|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sx|sy|sz|tc|td|tel|tf|tg|th|tj|tk|tl|tm|tn|to|tr|travel|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|yt|امارات|հայ|বাংলা|бел|中国|中國|الجزائر|مصر|ею|გე|ελ|香港|भारत|بھارت|భారత్|ભારત|ਭਾਰਤ|ভারত|இந்தியா|ایران|ايران|عراق|الاردن|한국|қаз|ලංකා|இலங்கை|المغرب|мкд|мон|澳門|澳门|مليسيا|عمان|پاکستان|پاكستان|فلسطين|срб|рф|قطر|السعودية|السعودیة|السعودیۃ|السعوديه|سودان|新加坡|சிங்கப்பூர்|سورية|سوريا|ไทย|تونس|台灣|台湾|臺灣|укр|اليمن|xxx|zm|aaa|aarp|abarth|abb|abbott|abbvie|abc|able|abogado|abudhabi|academy|accenture|accountant|accountants|aco|active|actor|adac|ads|adult|aeg|aetna|afamilycompany|afl|africa|africamagic|agakhan|agency|aig|aigo|airbus|airforce|airtel|akdn|alfaromeo|alibaba|alipay|allfinanz|allstate|ally|alsace|alstom|americanexpress|americanfamily|amex|amfam|amica|amsterdam|analytics|android|anquan|anz|aol|apartments|app|apple|aquarelle|arab|aramco|archi|army|art|arte|asda|associates|athleta|attorney|auction|audi|audible|audio|auspost|author|auto|autos|avianca|aws|axa|azure|baby|baidu|banamex|bananarepublic|band|bank|bar|barcelona|barclaycard|barclays|barefoot|bargains|baseball|basketball|bauhaus|bayern|bbc|bbt|bbva|bcg|bcn|beats|beauty|beer|bentley|berlin|best|bestbuy|bet|bharti|bible|bid|bike|bing|bingo|bio|black|blackfriday|blanco|blockbuster|blog|bloomberg|blue|bms|bmw|bnl|bnpparibas|boats|boehringer|bofa|bom|bond|boo|book|booking|boots|bosch|bostik|boston|bot|boutique|box|bradesco|bridgestone|broadway|broker|brother|brussels|budapest|bugatti|build|builders|business|buy|buzz|bzh|cab|cafe|cal|call|calvinklein|camera|camp|cancerresearch|canon|capetown|capital|capitalone|car|caravan|cards|care|career|careers|cars|cartier|casa|case|caseih|cash|casino|catering|catholic|cba|cbn|cbre|cbs|ceb|center|ceo|cern|cfa|cfd|chanel|channel|chase|chat|cheap|chintai|chloe|christmas|chrome|chrysler|church|cipriani|circle|cisco|citadel|citi|citic|city|cityeats|claims|cleaning|click|clinic|clinique|clothing|cloud|club|clubmed|coach|codes|coffee|college|cologne|comcast|commbank|community|company|compare|computer|comsec|condos|construction|consulting|contact|contractors|cooking|cookingchannel|cool|corsica|country|coupon|coupons|courses|credit|creditcard|creditunion|cricket|crown|crs|cruise|cruises|csc|cuisinella|cymru|cyou|dabur|dad|dance|date|dating|datsun|day|dclk|dds|deal|dealer|deals|degree|delivery|dell|deloitte|delta|democrat|dental|dentist|desi|design|dev|dhl|diamonds|diet|digital|direct|directory|discount|discover|dish|diy|dnp|docs|dodge|dog|doha|domains|dot|download|drive|dstv|dtv|dubai|duck|dunlop|duns|dupont|durban|dvag|dwg|earth|eat|edeka|education|email|emerck|emerson|energy|engineer|engineering|enterprises|epost|epson|equipment|ericsson|erni|esq|estate|esurance|etisalat|eurovision|eus|events|everbank|exchange|expert|exposed|express|extraspace|fage|fail|fairwinds|faith|family|fan|fans|farm|farmers|fashion|fast|fedex|feedback|ferrari|ferrero|fiat|fidelity|fido|film|final|finance|financial|fire|firestone|firmdale|fish|fishing|fit|fitness|flickr|flights|flir|florist|flowers|flsmidth|fly|foo|foodnetwork|football|ford|forex|forsale|forum|foundation|fox|free|fresenius|frl|frogans|frontdoor|frontier|ftr|fujitsu|fujixerox|fun|fund|furniture|futbol|fyi|gal|gallery|gallo|gallup|game|games|gap|garden|gbiz|gdn|gea|gent|genting|george|ggee|gift|gifts|gives|giving|glade|glass|gle|global|globo|gmail|gmbh|gmo|gmx|godaddy|gold|goldpoint|golf|goo|goodhands|goodyear|goog|google|gop|got|gotv|grainger|graphics|gratis|green|gripe|group|guardian|gucci|guge|guide|guitars|guru|hair|hamburg|hangout|haus|hbo|hdfc|hdfcbank|health|healthcare|help|helsinki|here|hermes|hgtv|hiphop|hisamitsu|hitachi|hiv|hkt|hockey|holdings|holiday|homedepot|homegoods|homes|homesense|honda|honeywell|horse|host|hosting|hot|hoteles|hotmail|house|how|hsbc|htc|hughes|hyatt|hyundai|ibm|icbc|ice|icu|ieee|ifm|iinet|ikano|imamat|imdb|immo|immobilien|industries|infiniti|ing|ink|institute|insurance|insure|intel|international|intuit|investments|ipiranga|irish|iselect|ismaili|ist|istanbul|itau|itv|iveco|iwc|jaguar|java|jcb|jcp|jeep|jetzt|jewelry|jio|jlc|jll|jmp|jnj|joburg|jot|joy|jpmorgan|jprs|juegos|juniper|kaufen|kddi|kerryhotels|kerrylogistics|kerryproperties|kfh|kia|kim|kinder|kindle|kitchen|kiwi|koeln|komatsu|kosher|kpmg|kpn|krd|kred|kuokgroup|kyknet|kyoto|lacaixa|ladbrokes|lamborghini|lamer|lancaster|lancia|lancome|land|landrover|lanxess|lasalle|lat|latino|latrobe|law|lawyer|lds|lease|leclerc|lefrak|legal|lego|lexus|lgbt|liaison|lidl|life|lifeinsurance|lifestyle|lighting|like|lilly|limited|limo|lincoln|linde|link|lipsy|live|living|lixil|loan|loans|locker|locus|loft|lol|london|lotte|lotto|love|lpl|lplfinancial|ltd|ltda|lundbeck|lupin|luxe|luxury|macys|madrid|maif|maison|makeup|man|management|mango|market|marketing|markets|marriott|marshalls|maserati|mattel|mba|mcd|mcdonalds|mckinsey|med|media|meet|melbourne|meme|memorial|men|menu|meo|metlife|miami|microsoft|mini|mint|mit|mitsubishi|mlb|mls|mma|mnet|mobily|moda|moe|moi|mom|monash|money|monster|montblanc|mopar|mormon|mortgage|moscow|moto|motorcycles|mov|movie|movistar|msd|mtn|mtpc|mtr|multichoice|mutual|mutuelle|mzansimagic|nab|nadex|nagoya|naspers|nationwide|natura|navy|nba|nec|netbank|netflix|network|neustar|new|newholland|news|next|nextdirect|nexus|nfl|ngo|nhk|nico|nike|nikon|ninja|nissan|nissay|nokia|northwesternmutual|norton|now|nowruz|nowtv|nra|nrw|ntt|nyc|obi|observer|off|office|okinawa|olayan|olayangroup|oldnavy|ollo|omega|one|ong|onl|online|onyourside|ooo|open|oracle|orange|organic|orientexpress|origins|osaka|otsuka|ott|ovh|page|pamperedchef|panasonic|panerai|paris|pars|partners|parts|party|passagens|pay|payu|pccw|pet|pfizer|pharmacy|philips|photo|photography|photos|physio|piaget|pics|pictet|pictures|pid|pin|ping|pink|pioneer|pizza|place|play|playstation|plumbing|plus|pnc|pohl|poker|politie|porn|pramerica|praxi|press|prime|prod|productions|prof|progressive|promo|properties|property|protection|pru|prudential|pub|pwc|qpon|quebec|quest|qvc|racing|raid|read|realestate|realtor|realty|recipes|red|redstone|redumbrella|rehab|reise|reisen|reit|reliance|ren|rent|rentals|repair|report|republican|rest|restaurant|review|reviews|rexroth|rich|richardli|ricoh|rightathome|ril|rio|rip|rmit|rocher|rocks|rodeo|rogers|room|rsvp|ruhr|run|rwe|ryukyu|saarland|safe|safety|sakura|sale|salon|samsclub|samsung|sandvik|sandvikcoromant|sanofi|sap|sapo|sarl|sas|save|saxo|sbi|sbs|sca|scb|schaeffler|schmidt|scholarships|school|schule|schwarz|science|scjohnson|scor|scot|seat|secure|security|seek|select|sener|services|ses|seven|sew|sex|sexy|sfr|shangrila|sharp|shaw|shell|shia|shiksha|shoes|shopping|shouji|show|showtime|shriram|silk|sina|singles|site|ski|skin|sky|skype|sling|smart|smile|sncf|soccer|social|softbank|software|sohu|solar|solutions|song|sony|soy|space|spiegel|spot|spreadbetting|srl|srt|stada|staples|star|starhub|statebank|statefarm|statoil|stc|stcgroup|stockholm|storage|store|stream|studio|study|style|sucks|supersport|supplies|supply|support|surf|surgery|suzuki|swatch|swiftcover|swiss|sydney|symantec|systems|tab|taipei|talk|taobao|target|tatamotors|tatar|tattoo|tax|taxi|tci|tdk|team|tech|technology|telecity|telefonica|temasek|tennis|teva|thd|theater|theatre|theguardian|tiaa|tickets|tienda|tiffany|tips|tires|tirol|tjmaxx|tjx|tkmaxx|tmall|today|tokyo|tools|top|toray|toshiba|total|tours|town|toyota|toys|trade|trading|training|travelchannel|travelers|travelersinsurance|trust|trv|tube|tui|tunes|tushu|tvs|ubank|ubs|uconnect|unicom|university|uno|uol|ups|vacations|vana|vanguard|vegas|ventures|verisign|versicherung|vet|viajes|video|vig|viking|villas|vin|vip|virgin|visa|vision|vista|vistaprint|viva|vivo|vlaanderen|vodka|volkswagen|volvo|vote|voting|voto|voyage|vuelos|wales|walmart|walter|wang|wanggou|warman|watch|watches|weather|weatherchannel|webcam|weber|website|wed|wedding|weibo|weir|whoswho|wien|wiki|williamhill|win|windows|wine|winners|wme|wolterskluwer|woodside|work|works|world|wow|wtc|wtf|xbox|xerox|xfinity|xihuan|xin|कॉम|セール|佛山|慈善|集团|在线|大众汽车|点看|คอม|八卦|موقع|一号店|公益|公司|香格里拉|网站|移动|我爱你|москва|католик|онлайн|сайт|联通|קום|时尚|微博|淡马锡|ファッション|орг|नेट|ストア|삼성|商标|商店|商城|дети|ポイント|新闻|工行|家電|كوم|中文网|中信|娱乐|谷歌|電訊盈科|购物|クラウド|通販|网店|संगठन|餐厅|网络|ком|诺基亚|食品|飞利浦|手表|手机|ارامكو|العليان|اتصالات|بازار|موبايلي|ابوظبي|كاثوليك|همراه|닷컴|政府|شبكة|بيتك|عرب|机构|组织机构|健康|рус|珠宝|大拿|みんな|グーグル|世界|書籍|网址|닷넷|コム|天主教|游戏|vermögensberater|vermögensberatung|企业|信息|嘉里大酒店|嘉里|广东|政务|xperia|xyz|yachts|yahoo|yamaxun|yandex|yodobashi|yoga|yokohama|you|youtube|yun|zappos|zara|zero|zip|zippo|zone|zuerich\".split(\r\n    \"|\",\r\n  );\r\n  var defaults = {\r\n    html: false,\r\n    wiki: false, // TODO: check all cases\r\n    markdown: false, // TODO: check all cases\r\n    hashtags: true,\r\n    mentions: true,\r\n    emails: true,\r\n    links: {\r\n      protocols: true,\r\n      www: false,\r\n      tlds: {},\r\n    },\r\n  };\r\n  /* TODO: add more named HTML entities */\r\n  var HTML_ENTITIES = {\r\n    nbsp: \" \",\r\n    quot: '\"',\r\n    gt: \">\",\r\n    lt: \"<\",\r\n    amp: \"&\",\r\n    ndash: \"–\",\r\n  };\r\n\r\n  for (var i = 0; i < TLDs.length; i++) {\r\n    defaults.links.tlds[TLDs[i]] = true;\r\n  }\r\n\r\n  /**\r\n   * Токен, соответствующий некоторой подстроке в представленном на вход тексте.\r\n   *\r\n   * @constructor\r\n   * @property {string} type Тип токена.\r\n   * @property {string} subType Подтип токена.\r\n   * @property {number} st Индекс первого символа, входящего в токен.\r\n   * @property {number} en Индекс последнего символа, входящего в токен.\r\n   * @property {number} length Длина токена.\r\n   * @property {boolean} firstUpper True, если первый символ токена является заглавной буквой.\r\n   * @property {boolean} allUpper True, если все символы в токене являются заглавными буквами.\r\n   */\r\n  var Token = function(\r\n    source,\r\n    st,\r\n    length,\r\n    index,\r\n    firstUpper,\r\n    allUpper,\r\n    type,\r\n    subType,\r\n  ) {\r\n    this.source = source;\r\n    this.st = st;\r\n    this.length = length;\r\n    this.index = index;\r\n    this.firstUpper = firstUpper;\r\n    this.allUpper = allUpper;\r\n    this.type = type;\r\n    if (subType) {\r\n      this.subType = subType;\r\n    }\r\n  };\r\n  Token.prototype.toString = function() {\r\n    return \"_str\" in this && this._str.length == this.length\r\n      ? this._str\r\n      : (this._str = this.source.substr(this.st, this.length));\r\n  };\r\n  Token.prototype.indexOf = function(str) {\r\n    if (str.length == 1) {\r\n      for (var i = 0; i < this.length; i++) {\r\n        if (this.source[this.st + i] == str) {\r\n          return i;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n    return this.toString().indexOf(str);\r\n  };\r\n  Token.prototype.toLowerCase = function() {\r\n    return this.toString().toLocaleLowerCase();\r\n  };\r\n  Token.prototype.isCapitalized = function() {\r\n    return this.firstUpper && !this.allUpper;\r\n  };\r\n  Token.prototype.en = function() {\r\n    return this.st + this.length - 1;\r\n  };\r\n\r\n  /**\r\n   * Создает токенизатор текста с заданными опциями.\r\n   *\r\n   * @playground\r\n   * var Az = require('az');\r\n   * var tokens = Az.Tokens('Текст (от лат. textus — «ткань; сплетение, связь, паутина, сочетание») — зафиксированная на каком-либо материальном носителе человеческая мысль; в общем плане связная и полная последовательность символов.');\r\n   * tokens.done();\r\n   * @constructor\r\n   * @param {string} [text] Строка для разбивки на токены.\r\n   * @param {Object} [config] Опции, применяемые при разбивке.\r\n   * @param {boolean} [config.html=False] Распознавать и выделять в отдельные\r\n   *  токены (типа TAG) HTML-теги. Кроме того, содержимое тегов &lt;style&gt;\r\n   *  и &lt;script&gt; будет размечено как единый токен типа CONTENT.\r\n   * @param {boolean} [config.wiki=False] Распознавать и выделять в отдельные\r\n   *  токены элементы вики-разметки.\r\n   * @param {boolean} [config.markdown=False] Распознавать и выделять в отдельные\r\n   *  токены элементы Markdown-разметки.\r\n   * @param {boolean} [config.hashtags=True] Распознавать и выделять в отдельные\r\n   *  токены хэштеги (строки, начинающиеся с символа «#»).\r\n   * @param {boolean} [config.mentions=True] Распознавать и выделять в отдельные\r\n   *  токены упоминания (строки, начинающиеся с символа «@»).\r\n   * @param {boolean} [config.emails=True] Распознавать и выделять в отдельные\r\n   *  токены е-мейлы (нет, распознавание всех корректных по RFC адресов не\r\n   *  гарантируется).\r\n   * @param {Object} [config.links] Настройки распознавания ссылок. False, чтобы\r\n   *  не распознавать ссылки совсем.\r\n   * @param {boolean} [config.links.protocols=True] Распознавать и выделять в отдельные\r\n   *  токены ссылки с указанным протоколом (http://, https:// и вообще любым другим).\r\n   * @param {boolean} [config.links.www=False] Распознавать и выделять в отдельные\r\n   *  токены ссылки, начинающиеся с «www.».\r\n   * @param {Object} [config.links.tlds] Объект, в котором ключами должны быть\r\n   *  домены верхнего уровня, в которых будут распознаваться ссылки. По умолчанию\r\n   *  текущий список всех таких доменов.\r\n   * @memberof Az\r\n   */\r\n  var Tokens = function(text, config) {\r\n    if (this instanceof Tokens) {\r\n      this.tokens = [];\r\n      this.source = \"\";\r\n      if (typeof text == \"string\") {\r\n        this.config = config ? Az.extend(defaults, config) : defaults;\r\n        this.append(text);\r\n      } else {\r\n        this.config = text ? Az.extend(defaults, text) : defaults;\r\n      }\r\n      this.index = -1;\r\n    } else {\r\n      return new Tokens(text, config);\r\n    }\r\n  };\r\n\r\n  Tokens.WORD = new String(\"WORD\");\r\n  Tokens.NUMBER = new String(\"NUMBER\");\r\n  Tokens.OTHER = new String(\"OTHER\");\r\n  Tokens.DIGIT = new String(\"DIGIT\");\r\n  Tokens.CYRIL = new String(\"CYRIL\");\r\n  Tokens.LATIN = new String(\"LATIN\");\r\n  Tokens.MIXED = new String(\"MIXED\");\r\n  Tokens.PUNCT = new String(\"PUNCT\");\r\n  Tokens.SPACE = new String(\"SPACE\");\r\n  Tokens.MARKUP = new String(\"MARKUP\");\r\n  Tokens.NEWLINE = new String(\"NEWLINE\");\r\n  Tokens.EMAIL = new String(\"EMAIL\");\r\n  Tokens.LINK = new String(\"LINK\");\r\n  Tokens.HASHTAG = new String(\"HASHTAG\");\r\n  Tokens.MENTION = new String(\"MENTION\");\r\n  Tokens.TAG = new String(\"TAG\");\r\n  Tokens.CONTENT = new String(\"CONTENT\");\r\n  Tokens.SCRIPT = new String(\"SCRIPT\");\r\n  Tokens.STYLE = new String(\"STYLE\");\r\n  Tokens.COMMENT = new String(\"COMMENT\");\r\n  Tokens.CLOSING = new String(\"CLOSING\");\r\n  Tokens.TEMPLATE = new String(\"TEMPLATE\");\r\n  Tokens.RANGE = new String(\"RANGE\");\r\n  Tokens.ENTITY = new String(\"ENTITY\");\r\n\r\n  /**\r\n   * Отправляет ещё один кусок текста на токенизацию. Таким образом вполне\r\n   * допустимо обрабатывать большие документы частями, многократно вызывая этот\r\n   * метод. При этом токен может начаться в одной части и продолжиться в\r\n   * следующей (а закончиться в ещё одной).\r\n   *\r\n   * @param {string} text Строка для разбивки на токены.\r\n   * @param {Object} [config] Опции, применяемые при разбивке. Перекрывают\r\n   *  опции, заданные в конструкторе токенизатора.\r\n   * @see Tokens\r\n   */\r\n  Tokens.prototype.append = function(text, config) {\r\n    \"use strict\";\r\n    // Для производительности:\r\n    // - как можно меньше операций конкатенции/разбивки строк\r\n    // - вместо сравнения всего токена, проверяем соответствующий ему символ в исходной строке\r\n    // - типы токенов - константы в Tokens, формально это строки, но сравниваем через === (как объекты)\r\n    config = config ? Az.extend(this.config, config) : this.config;\r\n    if (config.links && config.links.tlds === true) {\r\n      config.links.tlds = defaults.links.tlds;\r\n    }\r\n\r\n    var offs = this.source.length;\r\n    this.source += text;\r\n\r\n    var s = this.source,\r\n      ts = this.tokens;\r\n    for (var i = offs; i < s.length; i++) {\r\n      var ch = s[i];\r\n      var code = s.charCodeAt(i);\r\n\r\n      var append = false;\r\n      var last = ts.length - 1;\r\n      var token = ts[last];\r\n      var st = i;\r\n\r\n      if (config.html && ch == \";\") {\r\n        // &nbsp;\r\n        if (\r\n          last > 0 &&\r\n          token.type === Tokens.WORD &&\r\n          ts[last - 1].length == 1 &&\r\n          s[ts[last - 1].st] == \"&\"\r\n        ) {\r\n          var name = token.toLowerCase();\r\n          if (name in HTML_ENTITIES) {\r\n            ch = HTML_ENTITIES[name];\r\n            code = ch.charCodeAt(0);\r\n\r\n            last -= 2;\r\n            token = ts[last];\r\n            ts.length = last + 1;\r\n          }\r\n        }\r\n        // &x123AF5;\r\n        // &1234;\r\n        else if (\r\n          last > 1 &&\r\n          (token.type === Tokens.NUMBER ||\r\n            (token.type === Tokens.WORD && s[token.st] == \"x\")) &&\r\n          ts[last - 1].length == 1 &&\r\n          s[ts[last - 1].st] == \"#\" &&\r\n          ts[last - 1].length == 1 &&\r\n          s[ts[last - 1].st] == \"&\"\r\n        ) {\r\n          if (s[token.st] == \"x\") {\r\n            code = parseInt(token.toString().substr(1), 16);\r\n          } else {\r\n            code = parseInt(token.toString(), 10);\r\n          }\r\n          ch = String.fromCharCode(code);\r\n\r\n          last -= 3;\r\n          token = ts[last];\r\n          ts.length = last + 1;\r\n        }\r\n      }\r\n\r\n      var charType = Tokens.OTHER;\r\n      var charUpper = ch.toLocaleLowerCase() != ch;\r\n      if (code >= 0x0400 && code <= 0x04ff) charType = Tokens.CYRIL;\r\n      if (\r\n        (code >= 0x0041 && code <= 0x005a) ||\r\n        (code >= 0x0061 && code <= 0x007a) ||\r\n        (code >= 0x00c0 && code <= 0x024f)\r\n      )\r\n        charType = Tokens.LATIN;\r\n      if (code >= 0x0030 && code <= 0x0039) charType = Tokens.DIGIT;\r\n      if (code <= 0x0020 || (code >= 0x0080 && code <= 0x00a0))\r\n        charType = Tokens.SPACE;\r\n      if (\"‐-−‒–—―.…,:;?!¿¡()[]«»\\\"'’‘’“”/⁄\".indexOf(ch) > -1)\r\n        charType = Tokens.PUNCT;\r\n\r\n      var tokenType = charType;\r\n      var tokenSubType = false;\r\n      if (charType === Tokens.CYRIL || charType === Tokens.LATIN) {\r\n        tokenType = Tokens.WORD;\r\n        tokenSubType = charType;\r\n      } else if (charType === Tokens.DIGIT) {\r\n        tokenType = Tokens.NUMBER;\r\n      }\r\n\r\n      var lineStart = !token || s[token.st + token.length - 1] == \"\\n\";\r\n\r\n      if (config.wiki) {\r\n        if (lineStart) {\r\n          if (\":;*#~|\".indexOf(ch) > -1) {\r\n            tokenType = Tokens.MARKUP;\r\n            tokenSubType = Tokens.NEWLINE;\r\n          }\r\n        }\r\n        if (\"={[|]}\".indexOf(ch) > -1) {\r\n          tokenType = Tokens.MARKUP;\r\n        }\r\n      }\r\n\r\n      if (config.markdown) {\r\n        if (lineStart) {\r\n          if (\"=-#>+-\".indexOf(ch) > -1) {\r\n            tokenType = Tokens.MARKUP;\r\n            tokenSubType = Tokens.NEWLINE;\r\n          }\r\n        }\r\n        if (\"[]*~_`\\\\\".indexOf(ch) > -1) {\r\n          tokenType = Tokens.MARKUP;\r\n        }\r\n      }\r\n\r\n      if (token) {\r\n        if (\r\n          config.wiki &&\r\n          ch != \"'\" &&\r\n          token.length == 1 &&\r\n          s[token.st] == \"'\" &&\r\n          last > 0 &&\r\n          ts[last - 1].type === Tokens.WORD &&\r\n          ts[last - 1].subType === Tokens.LATIN\r\n        ) {\r\n          ts[last - 1].length += token.length;\r\n\r\n          last -= 1;\r\n          ts.length = last + 1;\r\n          token = ts[last];\r\n        }\r\n\r\n        // Preprocess last token\r\n        if (\r\n          config.links &&\r\n          config.links.tlds &&\r\n          (charType === Tokens.PUNCT || charType === Tokens.SPACE) &&\r\n          ts.length > 2 &&\r\n          ts[last - 2].type === Tokens.WORD &&\r\n          ts[last - 1].length == 1 &&\r\n          s[ts[last - 1].st] == \".\" &&\r\n          ts[last].type === Tokens.WORD &&\r\n          token.toString() in config.links.tlds\r\n        ) {\r\n          // Merge all subdomains\r\n          while (\r\n            last >= 2 &&\r\n            ts[last - 2].type === Tokens.WORD &&\r\n            ts[last - 1].length == 1 &&\r\n            (s[ts[last - 1].st] == \".\" ||\r\n              s[ts[last - 1].st] == \"@\" ||\r\n              s[ts[last - 1].st] == \":\")\r\n          ) {\r\n            last -= 2;\r\n            token = ts[last];\r\n            token.length += ts[last + 1].length + ts[last + 2].length;\r\n            token.allUpper =\r\n              token.allUpper && ts[last + 1].allUpper && ts[last + 2].allUpper;\r\n          }\r\n\r\n          if (\r\n            config.emails &&\r\n            token.indexOf(\"@\") > -1 &&\r\n            token.indexOf(\":\") == -1\r\n          ) {\r\n            // URL can contain a '@' but in that case it should be in form http://user@site.com or user:pass@site.com\r\n            // So if URL has a '@' but no ':' in it, we assume it's a email\r\n            token.type = Tokens.EMAIL;\r\n          } else {\r\n            token.type = Tokens.LINK;\r\n\r\n            if (ch == \"/\") {\r\n              append = true;\r\n            }\r\n          }\r\n          ts.length = last + 1;\r\n        }\r\n\r\n        // Process next char (start new token or append to the previous one)\r\n        else if (token.type === Tokens.LINK) {\r\n          if (\r\n            ch == \")\" &&\r\n            last >= 1 &&\r\n            ts[last - 1].type === Tokens.MARKUP &&\r\n            ts[last - 1].length == 1 &&\r\n            s[ts[last - 1].st] == \"(\"\r\n          ) {\r\n            tokenType = Tokens.MARKUP;\r\n          } else if (charType !== Tokens.SPACE && ch != \",\" && ch != \"<\") {\r\n            append = true;\r\n          }\r\n        } else if (token.type === Tokens.EMAIL) {\r\n          if (\r\n            charType === Tokens.CYRIL ||\r\n            charType === Tokens.LATIN ||\r\n            ch == \".\"\r\n          ) {\r\n            append = true;\r\n          }\r\n        } else if (\r\n          token.type === Tokens.HASHTAG ||\r\n          token.type === Tokens.MENTION\r\n        ) {\r\n          if (\r\n            charType === Tokens.CYRIL ||\r\n            charType == Tokens.LATIN ||\r\n            charType == Tokens.DIGIT ||\r\n            ch == \"_\" ||\r\n            (ch == \"@\" && token.indexOf(\"@\") == -1)\r\n          ) {\r\n            append = true;\r\n          }\r\n        } else if (\r\n          token.type === Tokens.TAG &&\r\n          (token.quote || s[token.en()] != \">\")\r\n        ) {\r\n          append = true;\r\n          if (token.quote) {\r\n            if (ch == token.quote && s[token.en()] != \"\\\\\") {\r\n              delete token.quote;\r\n            }\r\n          } else if (ch == '\"' || ch == \"'\") {\r\n            token.quote = ch;\r\n          }\r\n        } else if (token.type === Tokens.CONTENT) {\r\n          append = true;\r\n          if (token.quote) {\r\n            if (ch == token.quote && s[token.en()] != \"\\\\\") {\r\n              delete token.quote;\r\n            }\r\n          } else if (ch == '\"' || ch == \"'\") {\r\n            token.quote = ch;\r\n          } else if (ch == \">\") {\r\n            if (\r\n              token.length >= 8 &&\r\n              token.toString().substr(-8) == \"</script\"\r\n            ) {\r\n              token.length -= 8;\r\n              st -= 8;\r\n\r\n              append = false;\r\n              tokenType = Tokens.TAG;\r\n              tokenSubType = Tokens.CLOSING;\r\n            } else if (\r\n              token.length >= 7 &&\r\n              token.toString().substr(-7) == \"</style\"\r\n            ) {\r\n              token.length -= 7;\r\n              st -= 7;\r\n\r\n              append = false;\r\n              tokenType = Tokens.TAG;\r\n              tokenSubType = Tokens.CLOSING;\r\n            }\r\n          }\r\n        } else if (\r\n          token.type === Tokens.TAG &&\r\n          token.type !== Tokens.CLOSING &&\r\n          token.length >= 8 &&\r\n          token.toLowerCase().substr(1, 6) == \"script\"\r\n        ) {\r\n          tokenType = Tokens.CONTENT;\r\n          tokenSubType = Tokens.SCRIPT;\r\n        } else if (\r\n          token.type === Tokens.TAG &&\r\n          token.type !== Tokens.CLOSING &&\r\n          token.length >= 7 &&\r\n          token.toLowerCase().substr(1, 5) == \"style\"\r\n        ) {\r\n          tokenType = Tokens.CONTENT;\r\n          tokenSubType = Tokens.STYLE;\r\n        } else if (\r\n          config.html &&\r\n          token.length == 1 &&\r\n          s[token.st] == \"<\" &&\r\n          (charType === Tokens.LATIN || ch == \"!\" || ch == \"/\")\r\n        ) {\r\n          append = true;\r\n          token.type = Tokens.TAG;\r\n          if (ch == \"!\") {\r\n            token.subType = Tokens.COMMENT;\r\n          } else if (ch == \"/\") {\r\n            token.subType = Tokens.CLOSING;\r\n          }\r\n        } else if (token.type === Tokens.CONTENT) {\r\n          append = true;\r\n        } else if (\r\n          token.type === Tokens.MARKUP &&\r\n          token.subType == Tokens.TEMPLATE &&\r\n          (s[token.en()] != \"}\" || s[token.en() - 1] != \"}\")\r\n        ) {\r\n          append = true;\r\n        } else if (\r\n          token.type === Tokens.MARKUP &&\r\n          token.type === Tokens.LINK &&\r\n          s[token.en()] != \")\"\r\n        ) {\r\n          append = true;\r\n        } else if (\r\n          token.type === Tokens.MARKUP &&\r\n          s[token.st] == \"`\" &&\r\n          token.subType === Tokens.NEWLINE &&\r\n          charType === Tokens.LATIN\r\n        ) {\r\n          append = true;\r\n        } else if (charType === Tokens.CYRIL || charType === Tokens.LATIN) {\r\n          if (token.type === Tokens.WORD) {\r\n            append = true;\r\n            token.subType =\r\n              token.subType == charType ? token.subType : Tokens.MIXED;\r\n          } else if (token.type === Tokens.NUMBER) {\r\n            // Digits + ending\r\n            append = true;\r\n            token.subType =\r\n              token.subType && token.subType != charType\r\n                ? Tokens.MIXED\r\n                : charType;\r\n          } else if (\r\n            config.hashtags &&\r\n            token.length == 1 &&\r\n            s[token.st] == \"#\"\r\n          ) {\r\n            // Hashtags\r\n            append = true;\r\n            token.type = Tokens.HASHTAG;\r\n          } else if (\r\n            config.mentions &&\r\n            token.length == 1 &&\r\n            s[token.st] == \"@\" &&\r\n            (last == 0 || ts[last - 1].type === Tokens.SPACE)\r\n          ) {\r\n            // Mentions\r\n            append = true;\r\n            token.type = Tokens.MENTION;\r\n          } else if (\r\n            charType === Tokens.LATIN &&\r\n            token.length == 1 &&\r\n            (s[token.st] == \"'\" || s[token.st] == \"’\")\r\n          ) {\r\n            append = true;\r\n            token.type = Tokens.WORD;\r\n            token.subType = Tokens.LATIN;\r\n          } else if (token.length == 1 && s[token.st] == \"-\") {\r\n            // -цать (?), 3-й\r\n            append = true;\r\n\r\n            if (last > 0 && ts[last - 1].type === Tokens.NUMBER) {\r\n              token = ts[last - 1];\r\n              token.length += ts[last].length;\r\n\r\n              ts.length -= 1;\r\n            }\r\n\r\n            token.type = Tokens.WORD;\r\n            token.subType = charType;\r\n          }\r\n        } else if (charType === Tokens.DIGIT) {\r\n          if (token.type === Tokens.WORD) {\r\n            append = true;\r\n            token.subType = Tokens.MIXED;\r\n          } else if (token.type === Tokens.NUMBER) {\r\n            append = true;\r\n          } else if (\r\n            token.length == 1 &&\r\n            (s[token.st] == \"+\" || s[token.st] == \"-\")\r\n          ) {\r\n            append = true;\r\n\r\n            if (last > 0 && ts[last - 1].type === Tokens.NUMBER) {\r\n              token = ts[last - 1];\r\n              token.length += ts[last].length;\r\n              token.subType = Tokens.RANGE;\r\n\r\n              ts.length -= 1;\r\n            }\r\n\r\n            token.type = Tokens.NUMBER;\r\n          } else if (\r\n            token.length == 1 &&\r\n            (s[token.st] == \",\" || s[token.st] == \".\") &&\r\n            ts.length > 1 &&\r\n            ts[last - 1].type === Tokens.NUMBER\r\n          ) {\r\n            append = true;\r\n\r\n            token = ts[last - 1];\r\n            token.length += ts[last].length;\r\n\r\n            ts.length -= 1;\r\n          }\r\n        } else if (charType === Tokens.SPACE) {\r\n          if (token.type === Tokens.SPACE) {\r\n            append = true;\r\n          }\r\n        } else if (\r\n          token.type === Tokens.MARKUP &&\r\n          s[token.st] == ch &&\r\n          \"=-~:*#`'>_\".indexOf(ch) > -1\r\n        ) {\r\n          append = true;\r\n        } else if (ch == \".\") {\r\n          if (\r\n            config.links &&\r\n            config.links.www &&\r\n            token.length == 3 &&\r\n            token.toLowerCase() == \"www\"\r\n          ) {\r\n            // Links without protocol but with www\r\n            append = true;\r\n            token.type = Tokens.LINK;\r\n          }\r\n        } else if (config.wiki && ch == \"'\" && s[token.en()] == \"'\") {\r\n          if (token.length > 1) {\r\n            token.length--;\r\n            st--;\r\n            tokenType = Tokens.MARKUP;\r\n          } else {\r\n            append = true;\r\n            token.type = Tokens.MARKUP;\r\n          }\r\n        } else if (\r\n          ch == \"-\" ||\r\n          (token.subType == Tokens.LATIN && (ch == \"’\" || ch == \"'\"))\r\n        ) {\r\n          if (token.type === Tokens.WORD) {\r\n            append = true;\r\n          }\r\n        } else if (ch == \"/\") {\r\n          if (\r\n            config.links &&\r\n            config.links.protocols &&\r\n            ts.length > 2 &&\r\n            ts[last - 2].type === Tokens.WORD &&\r\n            ts[last - 2].subType == Tokens.LATIN &&\r\n            ts[last - 1].length == 1 &&\r\n            s[ts[last - 1].st] == \":\" &&\r\n            ts[last].length == 1 &&\r\n            s[ts[last].st] == \"/\"\r\n          ) {\r\n            // Links (with protocols)\r\n            append = true;\r\n\r\n            token = ts[last - 2];\r\n            token.length += ts[last - 1].length + ts[last].length;\r\n            token.allUpper =\r\n              token.allUpper && ts[last - 1].allUpper && ts[last].allUpper;\r\n            token.type = Tokens.LINK;\r\n\r\n            ts.length -= 2;\r\n          }\r\n        } else if (config.html && ch == \";\") {\r\n          if (\r\n            last > 0 &&\r\n            token.type === Tokens.WORD &&\r\n            ts[last - 1].length == 1 &&\r\n            s[ts[last - 1].st] == \"&\"\r\n          ) {\r\n            append = true;\r\n\r\n            token = ts[last - 1];\r\n            token.length += ts[last].length;\r\n            token.allUpper = token.allUpper && ts[last - 1].allUpper;\r\n            token.type = Tokens.ENTITY;\r\n\r\n            ts.length -= 1;\r\n          } else if (\r\n            last > 1 &&\r\n            (token.type === Tokens.WORD || token.type === Tokens.NUMBER) &&\r\n            ts[last - 1].length == 1 &&\r\n            s[ts[last - 1].st] == \"#\" &&\r\n            ts[last - 2].length == 1 &&\r\n            s[ts[last - 2].st] == \"&\"\r\n          ) {\r\n            append = true;\r\n\r\n            token = ts[last - 2];\r\n            token.length += ts[last - 1].length + ts[last].length;\r\n            token.allUpper =\r\n              token.allUpper && ts[last - 1].allUpper && ts[last].allUpper;\r\n            token.type = Tokens.ENTITY;\r\n\r\n            ts.length -= 2;\r\n          }\r\n        } else if (\r\n          config.markdown &&\r\n          ch == \"[\" &&\r\n          token.length == 1 &&\r\n          s[token.st] == \"!\"\r\n        ) {\r\n          append = true;\r\n          token.type = Tokens.MARKUP;\r\n        } else if (\r\n          config.markdown &&\r\n          ch == \"(\" &&\r\n          token.length == 1 &&\r\n          s[token.st] == \"]\"\r\n        ) {\r\n          tokenType = Tokens.MARKUP;\r\n          tokenSubType = Tokens.LINK;\r\n        } else if (\r\n          config.wiki &&\r\n          ch == \"{\" &&\r\n          token.length == 1 &&\r\n          s[token.st] == \"{\"\r\n        ) {\r\n          append = true;\r\n          token.type = Tokens.MARKUP;\r\n          token.subType = Tokens.TEMPLATE;\r\n        } else if (\r\n          config.wiki &&\r\n          ch == \"[\" &&\r\n          token.length == 1 &&\r\n          s[token.st] == \"[\"\r\n        ) {\r\n          append = true;\r\n        } else if (\r\n          config.wiki &&\r\n          ch == \"]\" &&\r\n          token.length == 1 &&\r\n          s[token.st] == \"]\"\r\n        ) {\r\n          append = true;\r\n        } else if (config.wiki && ch == \"|\" && !lineStart) {\r\n          var found = -1;\r\n          for (var j = last - 1; j >= 0; j--) {\r\n            if (\r\n              ts[j].length == 2 &&\r\n              s[ts[j].st] == \"[\" &&\r\n              s[ts[j].st + 1] == \"[\"\r\n            ) {\r\n              found = j;\r\n              break;\r\n            }\r\n            if (\r\n              (ts[j].length == 1 && s[ts[j].st] == \"|\") ||\r\n              ts[j].indexOf(\"\\n\") > -1\r\n            ) {\r\n              break;\r\n            }\r\n          }\r\n          if (found > -1) {\r\n            append = true;\r\n            for (var j = last - 1; j >= found; j--) {\r\n              token = ts[j];\r\n              token.length += ts[j + 1].length;\r\n              token.allUpper = token.allUpper && ts[j + 1].allUpper;\r\n            }\r\n            last = found;\r\n            ts.length = last + 1;\r\n            token.subType = Tokens.LINK;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (append) {\r\n        token.length++;\r\n        token.allUpper = token.allUpper && charUpper;\r\n      } else {\r\n        token = new Token(\r\n          s,\r\n          st,\r\n          i + 1 - st,\r\n          ts.length,\r\n          charUpper,\r\n          charUpper,\r\n          tokenType,\r\n          tokenSubType,\r\n        );\r\n        ts.push(token);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  function alwaysTrue() {\r\n    return true;\r\n  }\r\n\r\n  function getMatcher(filter, exclude) {\r\n    if (!filter) {\r\n      return alwaysTrue();\r\n    }\r\n    if (typeof filter == \"function\") {\r\n      return filter;\r\n    }\r\n    var types = filter;\r\n    var exclusive;\r\n    if (\"length\" in filter) {\r\n      exclusive = !exclude;\r\n      types = {};\r\n      for (var i = 0; i < filter.length; i++) {\r\n        types[filter[i]] = true;\r\n      }\r\n    } else {\r\n      exclusive = exclude;\r\n      exclude = false;\r\n    }\r\n    return function(token, index, array) {\r\n      if (token.subType) {\r\n        var sub = token.type + \".\" + token.subType;\r\n        if (sub in types) {\r\n          return types[sub] != exclude;\r\n        }\r\n      }\r\n      if (token.type in types) {\r\n        return types[token.type] != exclude;\r\n      } else {\r\n        return !exclusive;\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Завершает токенизацию, возвращая список токенов.\r\n   *\r\n   * Эта и другие функции принимают последними параметрами filter и флаг exclude. Они\r\n   * служат для фильтрации токенов (потому что часто удобнее получать не все токены, а\r\n   * только определенную часть из них).\r\n   *\r\n   * Если в filter передана функция, то параметр exclude игнорируется, а filter вызывается\r\n   * аналогично коллбэку в методе Array.prototype.filter: ей передаются параметры\r\n   * token, index, array (текущий токен, его индекс и общий список токенов). Будут\r\n   * возвращены только токены, для которых функция вернет истинное значение.\r\n   *\r\n   * Если в filter передан массив (или объект с полем length), то возвращаются токены, типы\r\n   * которых либо входят в этот массив (exclude=false), либо не входят в него (exclude=true).\r\n   * Вместо типов можно использовать строки вида 'WORD.LATIN' (тип, символ «точка» и подтип).\r\n   *\r\n   * Если в filter передать объект, то ключами в нём должны быть типы токенов, а значениями -\r\n   * true или false в зависимости от того, включать такие токены в ответ или нет. Как и в случае случае\r\n   * с массивом, в качестве ключей можно использовать строки вида 'WORD.LATIN'.\r\n   * Здесь параметр exclude означает, следует ли ограничить выдачу только теми типами, которые\r\n   * перечислены в filter.\r\n   * Значения с указанием подтипа имеют больший приоритет, чем просто типы. Благодаря этому можно\r\n   * делать такие странные вещи:\r\n   *\r\n   * ```\r\n   * t.done({ 'WORD': false, 'WORD.LATIN': true }, false);\r\n   * ```\r\n   * (то есть вернуть все теги, кроме тегов с типом WORD, но включить теги с подтипом LATIN)\r\n   *\r\n   * @param {Function|String[]|Object} [filter] Типы токенов, по которым нужно\r\n   *  отфильтровать результат (или функция для фильтрации).\r\n   * @param {boolean} [exclude=False] Инвертирует фильтр, т.е. возвращаются\r\n   *  токены со всеми типами, за исключением перечисленных в filter.\r\n   * @returns {Token[]} Список токенов после фильтрации.\r\n   */\r\n  Tokens.prototype.done = function(filter, exclude) {\r\n    // Finalize tokenizing, return list of tokens\r\n    // For now it just returns tokens, in the future there could be some additional work\r\n    if (!filter) {\r\n      return this.tokens;\r\n    }\r\n    var matcher = getMatcher(filter, exclude);\r\n    var list = [];\r\n    for (var i = 0; i < this.tokens.length; i++) {\r\n      if (matcher(this.tokens[i], i, this.tokens)) {\r\n        list.push(this.tokens[i]);\r\n      }\r\n    }\r\n    return list;\r\n  };\r\n\r\n  /**\r\n   * Возвращает токен по его индексу.\r\n   *\r\n   * @param {Function|String[]|Object} [filter] См. описание метода done.\r\n   * @param {boolean} [exclude=False] См. описание метода done.\r\n   * @returns {Token|False} Токен или false, если индекс вышел за пределы массива токенов.\r\n   */\r\n  Tokens.prototype.get = function(index, filter, exclude) {\r\n    if (index < 0) {\r\n      return false;\r\n    }\r\n    if (!filter) {\r\n      return this.tokens[index];\r\n    }\r\n    var matcher = getMatcher(filter, exclude);\r\n    var idx = 0;\r\n    for (var i = 0; i < this.tokens.length; i++) {\r\n      if (matcher(this.tokens[i], i, this.tokens)) {\r\n        if (idx == index) {\r\n          return this.tokens[i];\r\n        }\r\n        idx++;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Подсчитывает текущее количество токенов.\r\n   *\r\n   * @param {Function|String[]|Object} [filter] См. описание метода done.\r\n   * @param {boolean} [exclude=False] См. описание метода done.\r\n   * @returns {Number} Число токенов после фильтрации.\r\n   */\r\n  Tokens.prototype.count = function(filter, exclude) {\r\n    if (!filter) {\r\n      return this.tokens.length;\r\n    }\r\n    var matcher = getMatcher(filter, exclude);\r\n    var count = 0;\r\n    for (var i = 0; i < this.tokens.length; i++) {\r\n      if (matcher(this.tokens[i], i, this.tokens)) {\r\n        count++;\r\n      }\r\n    }\r\n    return count;\r\n  };\r\n\r\n  /**\r\n   * Получает следующий токен относительно текущей позиции.\r\n   *\r\n   * @param {boolean} moveIndex Следует ли переместить указатель к\r\n   *  следующему токену (в противном случае следующий вызов nextToken вернет\r\n   *  тот же результат)\r\n   * @param {Function|String[]|Object} [filter] См. описание метода done.\r\n   * @param {boolean} [exclude=False] См. описание метода done.\r\n   * @returns {Token|null} Следующий токен или null, если подходящих токенов\r\n   *  впереди нет.\r\n   */\r\n  Tokens.prototype.nextToken = function(moveIndex, filter, exclude) {\r\n    var matcher = getMatcher(filter, exclude);\r\n    var index = this.index;\r\n    index++;\r\n    while (\r\n      index < this.tokens.length &&\r\n      matcher(this.tokens[index], index, this.tokens)\r\n    ) {\r\n      index++;\r\n    }\r\n    if (index < this.tokens.length) {\r\n      if (moveIndex) {\r\n        this.index = index;\r\n      }\r\n      return this.tokens[index];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Проверяет, является ли следующий (за исключением пробелов) токен знаком\r\n   * препинания или нет.\r\n   *\r\n   * @returns {Token|False} False, если следующий токен не является знаком\r\n   *  препинания, либо сам токен в противном случае.\r\n   */\r\n  Tokens.prototype.punctAhead = function() {\r\n    var token = this.nextToken(false, [\"SPACE\"], true);\r\n    return token && token.type == \"PUNCT\" && token;\r\n  };\r\n\r\n  /**\r\n   * Получает предыдущий токен относительно текущей позиции.\r\n   *\r\n   * @param {boolean} moveIndex Следует ли переместить указатель к\r\n   *  предыдущему токену (в противном случае следующий вызов prevToken вернет\r\n   *  тот же результат)\r\n   * @param {Function|String[]|Object} [filter] См. описание метода done.\r\n   * @param {boolean} [exclude=False] См. описание метода done.\r\n   * @returns {Token|null} Предыдущий токен или null, если подходящих токенов\r\n   *  позади нет.\r\n   */\r\n  Tokens.prototype.prevToken = function(moveIndex, filter, exclude) {\r\n    var matcher = getMatcher(filter, exclude);\r\n    var index = this.index;\r\n    index--;\r\n    while (index >= 0 && matcher(this.tokens[index], index, this.tokens)) {\r\n      index--;\r\n    }\r\n    if (index >= 0) {\r\n      if (moveIndex) {\r\n        this.index = index;\r\n      }\r\n      return this.tokens[index];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Проверяет, является ли предыдущий (за исключением пробелов) токен знаком\r\n   * препинания или нет.\r\n   *\r\n   * @returns {Token|False} False, если предыдущий токен не является знаком\r\n   *  препинания, либо сам токен в противном случае.\r\n   */\r\n  Tokens.prototype.punctBehind = function() {\r\n    var token = this.prevToken(false, [\"SPACE\"], true);\r\n    return token && token.type == \"PUNCT\" && token;\r\n  };\r\n\r\n  /**\r\n   * Проверяет, есть ли впереди текущей позиции токены, удовлетворяющие фильтру.\r\n   *\r\n   * @param {Function|String[]|Object} [filter] См. описание метода done.\r\n   * @param {boolean} [exclude=False] См. описание метода done.\r\n   * @returns {boolean} True если впереди есть хотя бы один подходящий токен,\r\n   *  и False в противном случае.\r\n   */\r\n  Tokens.prototype.hasTokensAhead = function(filter, exclude) {\r\n    return this.nextToken(false, filter, exclude) != null;\r\n  };\r\n\r\n  /**\r\n   * Проверяет, есть ли позади текущей позиции токены, удовлетворяющие фильтру.\r\n   *\r\n   * @param {Function|String[]|Object} [filter] См. описание метода done.\r\n   * @param {boolean} [exclude=False] См. описание метода done.\r\n   * @returns {boolean} True если позади есть хотя бы один подходящий токен,\r\n   *  и False в противном случае.\r\n   */\r\n  Tokens.prototype.hasTokensBehind = function(filter, exclude) {\r\n    return this.prevToken(false, filter, exclude) != null;\r\n  };\r\n\r\n  return Tokens;\r\n}\r\n","export function Syntax(Az) {\r\n  var Syntax = function() {};\r\n\r\n  return Syntax;\r\n}\r\n","import { DAWG } from \"./Dawg\";\r\nimport { Tokens } from \"./Tokens\";\r\nimport { Morph } from \"./Morph\";\r\nimport { Syntax } from \"./Syntax\";\r\nimport fs from \"fs\";\r\n\r\nconst Az = {\r\n  load: function(url, responseType, callback) {\r\n    if (fs && Object.keys(fs).length > 0) {\r\n      fs.readFile(\r\n        url,\r\n        { encoding: responseType == \"json\" ? \"utf8\" : null },\r\n        function(err, data) {\r\n          if (err) {\r\n            callback(err);\r\n            return;\r\n          }\r\n\r\n          if (responseType == \"json\") {\r\n            callback(null, JSON.parse(data));\r\n          } else if (responseType == \"arraybuffer\") {\r\n            if (data.buffer) {\r\n              callback(null, data.buffer);\r\n            } else {\r\n              var ab = new ArrayBuffer(data.length);\r\n              var view = new Uint8Array(ab);\r\n              for (var i = 0; i < data.length; ++i) {\r\n                view[i] = data[i];\r\n              }\r\n              callback(null, ab);\r\n            }\r\n          } else {\r\n            callback(new Error(\"Unknown responseType\"));\r\n          }\r\n        },\r\n      );\r\n      return;\r\n    }\r\n\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", url, true);\r\n    xhr.responseType = responseType;\r\n\r\n    xhr.onload = function(e) {\r\n      if (xhr.response) {\r\n        callback && callback(null, xhr.response);\r\n      }\r\n    };\r\n\r\n    xhr.send(null);\r\n  },\r\n\r\n  extend: function() {\r\n    var result = {};\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      for (var key in arguments[i]) {\r\n        result[key] = arguments[i][key];\r\n      }\r\n    }\r\n    return result;\r\n  },\r\n};\r\n\r\nAz.DAWG = DAWG(Az);\r\nAz.Tokens = Tokens(Az);\r\nAz.Morph = Morph(Az);\r\nAz.Syntax = Syntax(Az);\r\n\r\nexport default Az;\r\n","<template>\n  <div class=\"home\">\n    <div class=\"text\" ref=\"text\">\n      <p>\n        Текст (от лат. textus — «ткань; сплетение, связь, паутина, сочетание»)\n        — зафиксированная на каком-либо материальном носителе человеческая\n        мысль; в общем плане связная и полная последовательность символов.\n      </p>\n\n      <p>\n        Существуют две основные трактовки понятия «текст»: «имманентная»\n        (расширенная, философски нагруженная) и «репрезентативная» (более\n        частная). Имманентный подход подразумевает отношение к тексту как к\n        автономной реальности, нацеленность на выявление его внутренней\n        структуры. Репрезентативный — рассмотрение текста как особой формы\n        представления знаний о внешней тексту действительности.\n      </p>\n\n      <p>\n        В лингвистике термин текст используется в широком значении, включая и\n        образцы устной речи. Восприятие текста изучается в рамках лингвистики\n        текста и психолингвистики. Так, например, И. Р. Гальперин определяет\n        текст следующим образом: «это письменное сообщение, объективированное\n        в виде письменного документа, состоящее из ряда высказываний,\n        объединённых разными типами лексической, грамматической и логической\n        связи, имеющее определённый моральный характер, прагматическую\n        установку и соответственно литературно обработанное»[1].\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Az from \"../lib/az/Az\";\n\nexport default {\n  name: \"home\",\n\n  data() {\n    return {\n      word: \"сквончить\",\n    };\n  },\n\n  async mounted() {\n    Az.Morph.init(\"../dicts/\", (err, Morph) => {\n      const capitalize = s => {\n        if (typeof s !== \"string\") {\n          return \"\";\n        }\n        return s.charAt(0).toUpperCase() + s.slice(1);\n      };\n\n      const processNode = parent => {\n        Array.from(parent.childNodes).forEach(node => {\n          if (node.nodeType === Node.TEXT_NODE) {\n            let text = node.data;\n            const tokens = Az.Tokens(text).done();\n            const verbs = tokens\n              .map(token => {\n                const tokenText = text.substr(token.st, token.length);\n                const parses = Morph(tokenText);\n\n                return {\n                  text: tokenText,\n                  parses,\n                  token,\n                };\n              })\n              .filter(token => {\n                for (const dict of token.parses) {\n                  if (dict.tag.VERB === true) {\n                    return true;\n                  }\n\n                  break;\n                }\n                return false;\n              });\n\n            for (const verb of verbs) {\n              const word = verb.token.firstUpper\n                ? capitalize(this.word)\n                : this.word;\n              text = text.split(verb.text).join(word);\n            }\n\n            node.nodeValue = text;\n          } else if (parent) {\n            processNode(node);\n          }\n        });\n      };\n\n      processNode(this.$refs.text);\n    });\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=0c26b248&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\nimport Router from \"vue-router\";\nimport Home from \"./views/Home.vue\";\n\nVue.use(Router);\n\nexport default new Router({\n  routes: [\n    {\n      path: \"/\",\n      name: \"home\",\n      component: Home,\n    },\n  ],\n});\n","import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {},\n  mutations: {},\n  actions: {},\n});\n","import Vue from \"vue\";\r\nimport App from \"./App.vue\";\r\nimport router from \"./router\";\r\nimport store from \"./store\";\r\n\r\nVue.config.productionTip = false;\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App),\r\n}).$mount(\"#app\");\r\n"],"sourceRoot":""}